<?xml version="1.0"?>
<doc>
    <assembly>
        <name>DataAdminCommonLib.Fakes</name>
    </assembly>
    <members>
        <member name="T:DataAdminCommonLib.Fakes.ShimDataAdminMessageFactory">
            <summary>Shim type of DataAdminCommonLib.DataAdminMessageFactory</summary>
        </member>
        <member name="M:DataAdminCommonLib.Fakes.ShimDataAdminMessageFactory.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:DataAdminCommonLib.Fakes.ShimDataAdminMessageFactory.#ctor(DataAdminCommonLib.DataAdminMessageFactory)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:DataAdminCommonLib.Fakes.ShimDataAdminMessageFactory.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:DataAdminCommonLib.Fakes.ShimDataAdminMessageFactory.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:DataAdminCommonLib.Fakes.ShimDataAdminMessageFactory.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:DataAdminCommonLib.Fakes.ShimDataAdminMessageFactory.Constructor">
            <summary>Sets the shim of DataAdminMessageFactory.DataAdminMessageFactory()</summary>
        </member>
        <member name="T:DataAdminCommonLib.Fakes.ShimDataAdminMessageFactory.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:DataAdminCommonLib.Fakes.ShimDataAdminMessageFactory.ShimBlockClient">
            <summary>Shim type of DataAdminCommonLib.DataAdminMessageFactory+BlockClient</summary>
        </member>
        <member name="M:DataAdminCommonLib.Fakes.ShimDataAdminMessageFactory.ShimBlockClient.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:DataAdminCommonLib.Fakes.ShimDataAdminMessageFactory.ShimBlockClient.#ctor(DataAdminCommonLib.DataAdminMessageFactory.BlockClient)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:DataAdminCommonLib.Fakes.ShimDataAdminMessageFactory.ShimBlockClient.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:DataAdminCommonLib.Fakes.ShimDataAdminMessageFactory.ShimBlockClient.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:DataAdminCommonLib.Fakes.ShimDataAdminMessageFactory.ShimBlockClient.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:DataAdminCommonLib.Fakes.ShimDataAdminMessageFactory.ShimBlockClient.BlockedClientIDGet">
            <summary>Sets the shim of BlockClient.get_BlockedClientID()</summary>
        </member>
        <member name="P:DataAdminCommonLib.Fakes.ShimDataAdminMessageFactory.ShimBlockClient.BlockedHostGet">
            <summary>Sets the shim of BlockClient.get_BlockedHost()</summary>
        </member>
        <member name="P:DataAdminCommonLib.Fakes.ShimDataAdminMessageFactory.ShimBlockClient.ConstructorInt32">
            <summary>Sets the shim of BlockClient.BlockClient(Int32 clID)</summary>
        </member>
        <member name="P:DataAdminCommonLib.Fakes.ShimDataAdminMessageFactory.ShimBlockClient.ConstructorString">
            <summary>Sets the shim of BlockClient.BlockClient(String host)</summary>
        </member>
        <member name="P:DataAdminCommonLib.Fakes.ShimDataAdminMessageFactory.ShimBlockClient.MsgTypeGet">
            <summary>Sets the shim of BlockClient.get_MsgType()</summary>
        </member>
        <member name="P:DataAdminCommonLib.Fakes.ShimDataAdminMessageFactory.ShimBlockClient.ServerMessageGet">
            <summary>Sets the shim of BlockClient.get_ServerMessage()</summary>
        </member>
        <member name="P:DataAdminCommonLib.Fakes.ShimDataAdminMessageFactory.ShimBlockClient.ServerMessageSetString">
            <summary>Sets the shim of BlockClient.set_ServerMessage(String value)</summary>
        </member>
        <member name="T:DataAdminCommonLib.Fakes.ShimDataAdminMessageFactory.ShimBlockClient.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:DataAdminCommonLib.Fakes.ShimDataAdminMessageFactory.ShimBlockClient.AllInstances.BlockedClientIDGet">
            <summary>Sets the shim of BlockClient.get_BlockedClientID()</summary>
        </member>
        <member name="P:DataAdminCommonLib.Fakes.ShimDataAdminMessageFactory.ShimBlockClient.AllInstances.BlockedHostGet">
            <summary>Sets the shim of BlockClient.get_BlockedHost()</summary>
        </member>
        <member name="P:DataAdminCommonLib.Fakes.ShimDataAdminMessageFactory.ShimBlockClient.AllInstances.MsgTypeGet">
            <summary>Sets the shim of BlockClient.get_MsgType()</summary>
        </member>
        <member name="P:DataAdminCommonLib.Fakes.ShimDataAdminMessageFactory.ShimBlockClient.AllInstances.ServerMessageGet">
            <summary>Sets the shim of BlockClient.get_ServerMessage()</summary>
        </member>
        <member name="P:DataAdminCommonLib.Fakes.ShimDataAdminMessageFactory.ShimBlockClient.AllInstances.ServerMessageSetString">
            <summary>Sets the shim of BlockClient.set_ServerMessage(String value)</summary>
        </member>
        <member name="T:DataAdminCommonLib.Fakes.ShimDataAdminMessageFactory.ShimChangePrivilage">
            <summary>Shim type of DataAdminCommonLib.DataAdminMessageFactory+ChangePrivilage</summary>
        </member>
        <member name="M:DataAdminCommonLib.Fakes.ShimDataAdminMessageFactory.ShimChangePrivilage.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:DataAdminCommonLib.Fakes.ShimDataAdminMessageFactory.ShimChangePrivilage.#ctor(DataAdminCommonLib.DataAdminMessageFactory.ChangePrivilage)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:DataAdminCommonLib.Fakes.ShimDataAdminMessageFactory.ShimChangePrivilage.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:DataAdminCommonLib.Fakes.ShimDataAdminMessageFactory.ShimChangePrivilage.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:DataAdminCommonLib.Fakes.ShimDataAdminMessageFactory.ShimChangePrivilage.AnyIPAllowedGet">
            <summary>Sets the shim of ChangePrivilage.get_AnyIPAllowed()</summary>
        </member>
        <member name="P:DataAdminCommonLib.Fakes.ShimDataAdminMessageFactory.ShimChangePrivilage.AnyIPAllowedSetBoolean">
            <summary>Sets the shim of ChangePrivilage.set_AnyIPAllowed(Boolean value)</summary>
        </member>
        <member name="P:DataAdminCommonLib.Fakes.ShimDataAdminMessageFactory.ShimChangePrivilage.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:DataAdminCommonLib.Fakes.ShimDataAdminMessageFactory.ShimChangePrivilage.ClientIDGet">
            <summary>Sets the shim of ChangePrivilage.get_ClientID()</summary>
        </member>
        <member name="P:DataAdminCommonLib.Fakes.ShimDataAdminMessageFactory.ShimChangePrivilage.ClientIDSetInt32">
            <summary>Sets the shim of ChangePrivilage.set_ClientID(Int32 value)</summary>
        </member>
        <member name="P:DataAdminCommonLib.Fakes.ShimDataAdminMessageFactory.ShimChangePrivilage.CollectSQGAllowedGet">
            <summary>Sets the shim of ChangePrivilage.get_CollectSQGAllowed()</summary>
        </member>
        <member name="P:DataAdminCommonLib.Fakes.ShimDataAdminMessageFactory.ShimChangePrivilage.CollectSQGAllowedSetBoolean">
            <summary>Sets the shim of ChangePrivilage.set_CollectSQGAllowed(Boolean value)</summary>
        </member>
        <member name="P:DataAdminCommonLib.Fakes.ShimDataAdminMessageFactory.ShimChangePrivilage.Constructor">
            <summary>Sets the shim of ChangePrivilage.ChangePrivilage()</summary>
        </member>
        <member name="P:DataAdminCommonLib.Fakes.ShimDataAdminMessageFactory.ShimChangePrivilage.ConstructorBooleanBooleanBooleanBooleanBooleanBooleanBooleanBoolean">
            <summary>Sets the shim of ChangePrivilage.ChangePrivilage(Boolean dnet, Boolean ticknet, Boolean shareddb, Boolean localdb, Boolean anyip, Boolean missbarf, Boolean collectsqg, Boolean dexport)</summary>
        </member>
        <member name="P:DataAdminCommonLib.Fakes.ShimDataAdminMessageFactory.ShimChangePrivilage.DatanetEnabledGet">
            <summary>Sets the shim of ChangePrivilage.get_DatanetEnabled()</summary>
        </member>
        <member name="P:DataAdminCommonLib.Fakes.ShimDataAdminMessageFactory.ShimChangePrivilage.DatanetEnabledSetBoolean">
            <summary>Sets the shim of ChangePrivilage.set_DatanetEnabled(Boolean value)</summary>
        </member>
        <member name="P:DataAdminCommonLib.Fakes.ShimDataAdminMessageFactory.ShimChangePrivilage.DexportEnabledGet">
            <summary>Sets the shim of ChangePrivilage.get_DexportEnabled()</summary>
        </member>
        <member name="P:DataAdminCommonLib.Fakes.ShimDataAdminMessageFactory.ShimChangePrivilage.DexportEnabledSetBoolean">
            <summary>Sets the shim of ChangePrivilage.set_DexportEnabled(Boolean value)</summary>
        </member>
        <member name="P:DataAdminCommonLib.Fakes.ShimDataAdminMessageFactory.ShimChangePrivilage.IsDexportGet">
            <summary>Sets the shim of ChangePrivilage.get_IsDexport()</summary>
        </member>
        <member name="P:DataAdminCommonLib.Fakes.ShimDataAdminMessageFactory.ShimChangePrivilage.IsDexportSetBoolean">
            <summary>Sets the shim of ChangePrivilage.set_IsDexport(Boolean value)</summary>
        </member>
        <member name="P:DataAdminCommonLib.Fakes.ShimDataAdminMessageFactory.ShimChangePrivilage.LocalDBAllowedGet">
            <summary>Sets the shim of ChangePrivilage.get_LocalDBAllowed()</summary>
        </member>
        <member name="P:DataAdminCommonLib.Fakes.ShimDataAdminMessageFactory.ShimChangePrivilage.LocalDBAllowedSetBoolean">
            <summary>Sets the shim of ChangePrivilage.set_LocalDBAllowed(Boolean value)</summary>
        </member>
        <member name="P:DataAdminCommonLib.Fakes.ShimDataAdminMessageFactory.ShimChangePrivilage.MissingBarFAllowedGet">
            <summary>Sets the shim of ChangePrivilage.get_MissingBarFAllowed()</summary>
        </member>
        <member name="P:DataAdminCommonLib.Fakes.ShimDataAdminMessageFactory.ShimChangePrivilage.MissingBarFAllowedSetBoolean">
            <summary>Sets the shim of ChangePrivilage.set_MissingBarFAllowed(Boolean value)</summary>
        </member>
        <member name="P:DataAdminCommonLib.Fakes.ShimDataAdminMessageFactory.ShimChangePrivilage.MsgTypeGet">
            <summary>Sets the shim of ChangePrivilage.get_MsgType()</summary>
        </member>
        <member name="P:DataAdminCommonLib.Fakes.ShimDataAdminMessageFactory.ShimChangePrivilage.ServerMessageGet">
            <summary>Sets the shim of ChangePrivilage.get_ServerMessage()</summary>
        </member>
        <member name="P:DataAdminCommonLib.Fakes.ShimDataAdminMessageFactory.ShimChangePrivilage.ServerMessageSetString">
            <summary>Sets the shim of ChangePrivilage.set_ServerMessage(String value)</summary>
        </member>
        <member name="P:DataAdminCommonLib.Fakes.ShimDataAdminMessageFactory.ShimChangePrivilage.SharedDBAllowedGet">
            <summary>Sets the shim of ChangePrivilage.get_SharedDBAllowed()</summary>
        </member>
        <member name="P:DataAdminCommonLib.Fakes.ShimDataAdminMessageFactory.ShimChangePrivilage.SharedDBAllowedSetBoolean">
            <summary>Sets the shim of ChangePrivilage.set_SharedDBAllowed(Boolean value)</summary>
        </member>
        <member name="P:DataAdminCommonLib.Fakes.ShimDataAdminMessageFactory.ShimChangePrivilage.TicknetEnabledGet">
            <summary>Sets the shim of ChangePrivilage.get_TicknetEnabled()</summary>
        </member>
        <member name="P:DataAdminCommonLib.Fakes.ShimDataAdminMessageFactory.ShimChangePrivilage.TicknetEnabledSetBoolean">
            <summary>Sets the shim of ChangePrivilage.set_TicknetEnabled(Boolean value)</summary>
        </member>
        <member name="T:DataAdminCommonLib.Fakes.ShimDataAdminMessageFactory.ShimChangePrivilage.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:DataAdminCommonLib.Fakes.ShimDataAdminMessageFactory.ShimChangePrivilage.AllInstances.AnyIPAllowedGet">
            <summary>Sets the shim of ChangePrivilage.get_AnyIPAllowed()</summary>
        </member>
        <member name="P:DataAdminCommonLib.Fakes.ShimDataAdminMessageFactory.ShimChangePrivilage.AllInstances.AnyIPAllowedSetBoolean">
            <summary>Sets the shim of ChangePrivilage.set_AnyIPAllowed(Boolean value)</summary>
        </member>
        <member name="P:DataAdminCommonLib.Fakes.ShimDataAdminMessageFactory.ShimChangePrivilage.AllInstances.ClientIDGet">
            <summary>Sets the shim of ChangePrivilage.get_ClientID()</summary>
        </member>
        <member name="P:DataAdminCommonLib.Fakes.ShimDataAdminMessageFactory.ShimChangePrivilage.AllInstances.ClientIDSetInt32">
            <summary>Sets the shim of ChangePrivilage.set_ClientID(Int32 value)</summary>
        </member>
        <member name="P:DataAdminCommonLib.Fakes.ShimDataAdminMessageFactory.ShimChangePrivilage.AllInstances.CollectSQGAllowedGet">
            <summary>Sets the shim of ChangePrivilage.get_CollectSQGAllowed()</summary>
        </member>
        <member name="P:DataAdminCommonLib.Fakes.ShimDataAdminMessageFactory.ShimChangePrivilage.AllInstances.CollectSQGAllowedSetBoolean">
            <summary>Sets the shim of ChangePrivilage.set_CollectSQGAllowed(Boolean value)</summary>
        </member>
        <member name="P:DataAdminCommonLib.Fakes.ShimDataAdminMessageFactory.ShimChangePrivilage.AllInstances.DatanetEnabledGet">
            <summary>Sets the shim of ChangePrivilage.get_DatanetEnabled()</summary>
        </member>
        <member name="P:DataAdminCommonLib.Fakes.ShimDataAdminMessageFactory.ShimChangePrivilage.AllInstances.DatanetEnabledSetBoolean">
            <summary>Sets the shim of ChangePrivilage.set_DatanetEnabled(Boolean value)</summary>
        </member>
        <member name="P:DataAdminCommonLib.Fakes.ShimDataAdminMessageFactory.ShimChangePrivilage.AllInstances.DexportEnabledGet">
            <summary>Sets the shim of ChangePrivilage.get_DexportEnabled()</summary>
        </member>
        <member name="P:DataAdminCommonLib.Fakes.ShimDataAdminMessageFactory.ShimChangePrivilage.AllInstances.DexportEnabledSetBoolean">
            <summary>Sets the shim of ChangePrivilage.set_DexportEnabled(Boolean value)</summary>
        </member>
        <member name="P:DataAdminCommonLib.Fakes.ShimDataAdminMessageFactory.ShimChangePrivilage.AllInstances.IsDexportGet">
            <summary>Sets the shim of ChangePrivilage.get_IsDexport()</summary>
        </member>
        <member name="P:DataAdminCommonLib.Fakes.ShimDataAdminMessageFactory.ShimChangePrivilage.AllInstances.IsDexportSetBoolean">
            <summary>Sets the shim of ChangePrivilage.set_IsDexport(Boolean value)</summary>
        </member>
        <member name="P:DataAdminCommonLib.Fakes.ShimDataAdminMessageFactory.ShimChangePrivilage.AllInstances.LocalDBAllowedGet">
            <summary>Sets the shim of ChangePrivilage.get_LocalDBAllowed()</summary>
        </member>
        <member name="P:DataAdminCommonLib.Fakes.ShimDataAdminMessageFactory.ShimChangePrivilage.AllInstances.LocalDBAllowedSetBoolean">
            <summary>Sets the shim of ChangePrivilage.set_LocalDBAllowed(Boolean value)</summary>
        </member>
        <member name="P:DataAdminCommonLib.Fakes.ShimDataAdminMessageFactory.ShimChangePrivilage.AllInstances.MissingBarFAllowedGet">
            <summary>Sets the shim of ChangePrivilage.get_MissingBarFAllowed()</summary>
        </member>
        <member name="P:DataAdminCommonLib.Fakes.ShimDataAdminMessageFactory.ShimChangePrivilage.AllInstances.MissingBarFAllowedSetBoolean">
            <summary>Sets the shim of ChangePrivilage.set_MissingBarFAllowed(Boolean value)</summary>
        </member>
        <member name="P:DataAdminCommonLib.Fakes.ShimDataAdminMessageFactory.ShimChangePrivilage.AllInstances.MsgTypeGet">
            <summary>Sets the shim of ChangePrivilage.get_MsgType()</summary>
        </member>
        <member name="P:DataAdminCommonLib.Fakes.ShimDataAdminMessageFactory.ShimChangePrivilage.AllInstances.ServerMessageGet">
            <summary>Sets the shim of ChangePrivilage.get_ServerMessage()</summary>
        </member>
        <member name="P:DataAdminCommonLib.Fakes.ShimDataAdminMessageFactory.ShimChangePrivilage.AllInstances.ServerMessageSetString">
            <summary>Sets the shim of ChangePrivilage.set_ServerMessage(String value)</summary>
        </member>
        <member name="P:DataAdminCommonLib.Fakes.ShimDataAdminMessageFactory.ShimChangePrivilage.AllInstances.SharedDBAllowedGet">
            <summary>Sets the shim of ChangePrivilage.get_SharedDBAllowed()</summary>
        </member>
        <member name="P:DataAdminCommonLib.Fakes.ShimDataAdminMessageFactory.ShimChangePrivilage.AllInstances.SharedDBAllowedSetBoolean">
            <summary>Sets the shim of ChangePrivilage.set_SharedDBAllowed(Boolean value)</summary>
        </member>
        <member name="P:DataAdminCommonLib.Fakes.ShimDataAdminMessageFactory.ShimChangePrivilage.AllInstances.TicknetEnabledGet">
            <summary>Sets the shim of ChangePrivilage.get_TicknetEnabled()</summary>
        </member>
        <member name="P:DataAdminCommonLib.Fakes.ShimDataAdminMessageFactory.ShimChangePrivilage.AllInstances.TicknetEnabledSetBoolean">
            <summary>Sets the shim of ChangePrivilage.set_TicknetEnabled(Boolean value)</summary>
        </member>
        <member name="T:DataAdminCommonLib.Fakes.ShimDataAdminMessageFactory.ShimClassSceleton">
            <summary>Shim type of DataAdminCommonLib.DataAdminMessageFactory+ClassSceleton</summary>
        </member>
        <member name="M:DataAdminCommonLib.Fakes.ShimDataAdminMessageFactory.ShimClassSceleton.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:DataAdminCommonLib.Fakes.ShimDataAdminMessageFactory.ShimClassSceleton.#ctor(DataAdminCommonLib.DataAdminMessageFactory.ClassSceleton)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:DataAdminCommonLib.Fakes.ShimDataAdminMessageFactory.ShimClassSceleton.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:DataAdminCommonLib.Fakes.ShimDataAdminMessageFactory.ShimClassSceleton.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:DataAdminCommonLib.Fakes.ShimDataAdminMessageFactory.ShimClassSceleton.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:DataAdminCommonLib.Fakes.ShimDataAdminMessageFactory.ShimClassSceleton.Constructor">
            <summary>Sets the shim of ClassSceleton.ClassSceleton()</summary>
        </member>
        <member name="P:DataAdminCommonLib.Fakes.ShimDataAdminMessageFactory.ShimClassSceleton.MsgTypeGet">
            <summary>Sets the shim of ClassSceleton.get_MsgType()</summary>
        </member>
        <member name="T:DataAdminCommonLib.Fakes.ShimDataAdminMessageFactory.ShimClassSceleton.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:DataAdminCommonLib.Fakes.ShimDataAdminMessageFactory.ShimClassSceleton.AllInstances.MsgTypeGet">
            <summary>Sets the shim of ClassSceleton.get_MsgType()</summary>
        </member>
        <member name="T:DataAdminCommonLib.Fakes.ShimDataAdminMessageFactory.ShimDataExportLogin">
            <summary>Shim type of DataAdminCommonLib.DataAdminMessageFactory+DataExportLogin</summary>
        </member>
        <member name="M:DataAdminCommonLib.Fakes.ShimDataAdminMessageFactory.ShimDataExportLogin.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:DataAdminCommonLib.Fakes.ShimDataAdminMessageFactory.ShimDataExportLogin.#ctor(DataAdminCommonLib.DataAdminMessageFactory.DataExportLogin)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:DataAdminCommonLib.Fakes.ShimDataAdminMessageFactory.ShimDataExportLogin.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:DataAdminCommonLib.Fakes.ShimDataAdminMessageFactory.ShimDataExportLogin.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:DataAdminCommonLib.Fakes.ShimDataAdminMessageFactory.ShimDataExportLogin.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:DataAdminCommonLib.Fakes.ShimDataAdminMessageFactory.ShimDataExportLogin.ConstructorString">
            <summary>Sets the shim of DataExportLogin.DataExportLogin(String ms)</summary>
        </member>
        <member name="P:DataAdminCommonLib.Fakes.ShimDataAdminMessageFactory.ShimDataExportLogin.MSGGet">
            <summary>Sets the shim of DataExportLogin.get_MSG()</summary>
        </member>
        <member name="P:DataAdminCommonLib.Fakes.ShimDataAdminMessageFactory.ShimDataExportLogin.MSGSetString">
            <summary>Sets the shim of DataExportLogin.set_MSG(String value)</summary>
        </member>
        <member name="P:DataAdminCommonLib.Fakes.ShimDataAdminMessageFactory.ShimDataExportLogin.MsgTypeGet">
            <summary>Sets the shim of DataExportLogin.get_MsgType()</summary>
        </member>
        <member name="T:DataAdminCommonLib.Fakes.ShimDataAdminMessageFactory.ShimDataExportLogin.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:DataAdminCommonLib.Fakes.ShimDataAdminMessageFactory.ShimDataExportLogin.AllInstances.MSGGet">
            <summary>Sets the shim of DataExportLogin.get_MSG()</summary>
        </member>
        <member name="P:DataAdminCommonLib.Fakes.ShimDataAdminMessageFactory.ShimDataExportLogin.AllInstances.MSGSetString">
            <summary>Sets the shim of DataExportLogin.set_MSG(String value)</summary>
        </member>
        <member name="P:DataAdminCommonLib.Fakes.ShimDataAdminMessageFactory.ShimDataExportLogin.AllInstances.MsgTypeGet">
            <summary>Sets the shim of DataExportLogin.get_MsgType()</summary>
        </member>
        <member name="T:DataAdminCommonLib.Fakes.ShimDataAdminMessageFactory.ShimDexportChangePrivilage">
            <summary>Shim type of DataAdminCommonLib.DataAdminMessageFactory+DexportChangePrivilage</summary>
        </member>
        <member name="M:DataAdminCommonLib.Fakes.ShimDataAdminMessageFactory.ShimDexportChangePrivilage.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:DataAdminCommonLib.Fakes.ShimDataAdminMessageFactory.ShimDexportChangePrivilage.#ctor(DataAdminCommonLib.DataAdminMessageFactory.DexportChangePrivilage)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:DataAdminCommonLib.Fakes.ShimDataAdminMessageFactory.ShimDexportChangePrivilage.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:DataAdminCommonLib.Fakes.ShimDataAdminMessageFactory.ShimDexportChangePrivilage.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:DataAdminCommonLib.Fakes.ShimDataAdminMessageFactory.ShimDexportChangePrivilage.AnyIPAllowedGet">
            <summary>Sets the shim of DexportChangePrivilage.get_AnyIPAllowed()</summary>
        </member>
        <member name="P:DataAdminCommonLib.Fakes.ShimDataAdminMessageFactory.ShimDexportChangePrivilage.AnyIPAllowedSetBoolean">
            <summary>Sets the shim of DexportChangePrivilage.set_AnyIPAllowed(Boolean value)</summary>
        </member>
        <member name="P:DataAdminCommonLib.Fakes.ShimDataAdminMessageFactory.ShimDexportChangePrivilage.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:DataAdminCommonLib.Fakes.ShimDataAdminMessageFactory.ShimDexportChangePrivilage.CollectSQGAllowedGet">
            <summary>Sets the shim of DexportChangePrivilage.get_CollectSQGAllowed()</summary>
        </member>
        <member name="P:DataAdminCommonLib.Fakes.ShimDataAdminMessageFactory.ShimDexportChangePrivilage.CollectSQGAllowedSetBoolean">
            <summary>Sets the shim of DexportChangePrivilage.set_CollectSQGAllowed(Boolean value)</summary>
        </member>
        <member name="P:DataAdminCommonLib.Fakes.ShimDataAdminMessageFactory.ShimDexportChangePrivilage.ConstructorBooleanBooleanBooleanBooleanBooleanBooleanBooleanBoolean">
            <summary>Sets the shim of DexportChangePrivilage.DexportChangePrivilage(Boolean dnet, Boolean ticknet, Boolean shareddb, Boolean localdb, Boolean anyip, Boolean missbarf, Boolean collectsqg, Boolean dexp)</summary>
        </member>
        <member name="P:DataAdminCommonLib.Fakes.ShimDataAdminMessageFactory.ShimDexportChangePrivilage.DatanetEnabledGet">
            <summary>Sets the shim of DexportChangePrivilage.get_DatanetEnabled()</summary>
        </member>
        <member name="P:DataAdminCommonLib.Fakes.ShimDataAdminMessageFactory.ShimDexportChangePrivilage.DatanetEnabledSetBoolean">
            <summary>Sets the shim of DexportChangePrivilage.set_DatanetEnabled(Boolean value)</summary>
        </member>
        <member name="P:DataAdminCommonLib.Fakes.ShimDataAdminMessageFactory.ShimDexportChangePrivilage.LocalDBAllowedGet">
            <summary>Sets the shim of DexportChangePrivilage.get_LocalDBAllowed()</summary>
        </member>
        <member name="P:DataAdminCommonLib.Fakes.ShimDataAdminMessageFactory.ShimDexportChangePrivilage.LocalDBAllowedSetBoolean">
            <summary>Sets the shim of DexportChangePrivilage.set_LocalDBAllowed(Boolean value)</summary>
        </member>
        <member name="P:DataAdminCommonLib.Fakes.ShimDataAdminMessageFactory.ShimDexportChangePrivilage.MissingBarFAllowedGet">
            <summary>Sets the shim of DexportChangePrivilage.get_MissingBarFAllowed()</summary>
        </member>
        <member name="P:DataAdminCommonLib.Fakes.ShimDataAdminMessageFactory.ShimDexportChangePrivilage.MissingBarFAllowedSetBoolean">
            <summary>Sets the shim of DexportChangePrivilage.set_MissingBarFAllowed(Boolean value)</summary>
        </member>
        <member name="P:DataAdminCommonLib.Fakes.ShimDataAdminMessageFactory.ShimDexportChangePrivilage.MsgTypeGet">
            <summary>Sets the shim of DexportChangePrivilage.get_MsgType()</summary>
        </member>
        <member name="P:DataAdminCommonLib.Fakes.ShimDataAdminMessageFactory.ShimDexportChangePrivilage.ServerMessageGet">
            <summary>Sets the shim of DexportChangePrivilage.get_ServerMessage()</summary>
        </member>
        <member name="P:DataAdminCommonLib.Fakes.ShimDataAdminMessageFactory.ShimDexportChangePrivilage.ServerMessageSetString">
            <summary>Sets the shim of DexportChangePrivilage.set_ServerMessage(String value)</summary>
        </member>
        <member name="P:DataAdminCommonLib.Fakes.ShimDataAdminMessageFactory.ShimDexportChangePrivilage.SharedDBAllowedGet">
            <summary>Sets the shim of DexportChangePrivilage.get_SharedDBAllowed()</summary>
        </member>
        <member name="P:DataAdminCommonLib.Fakes.ShimDataAdminMessageFactory.ShimDexportChangePrivilage.SharedDBAllowedSetBoolean">
            <summary>Sets the shim of DexportChangePrivilage.set_SharedDBAllowed(Boolean value)</summary>
        </member>
        <member name="P:DataAdminCommonLib.Fakes.ShimDataAdminMessageFactory.ShimDexportChangePrivilage.TicknetEnabledGet">
            <summary>Sets the shim of DexportChangePrivilage.get_TicknetEnabled()</summary>
        </member>
        <member name="P:DataAdminCommonLib.Fakes.ShimDataAdminMessageFactory.ShimDexportChangePrivilage.TicknetEnabledSetBoolean">
            <summary>Sets the shim of DexportChangePrivilage.set_TicknetEnabled(Boolean value)</summary>
        </member>
        <member name="T:DataAdminCommonLib.Fakes.ShimDataAdminMessageFactory.ShimDexportChangePrivilage.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:DataAdminCommonLib.Fakes.ShimDataAdminMessageFactory.ShimDexportChangePrivilage.AllInstances.AnyIPAllowedGet">
            <summary>Sets the shim of DexportChangePrivilage.get_AnyIPAllowed()</summary>
        </member>
        <member name="P:DataAdminCommonLib.Fakes.ShimDataAdminMessageFactory.ShimDexportChangePrivilage.AllInstances.AnyIPAllowedSetBoolean">
            <summary>Sets the shim of DexportChangePrivilage.set_AnyIPAllowed(Boolean value)</summary>
        </member>
        <member name="P:DataAdminCommonLib.Fakes.ShimDataAdminMessageFactory.ShimDexportChangePrivilage.AllInstances.CollectSQGAllowedGet">
            <summary>Sets the shim of DexportChangePrivilage.get_CollectSQGAllowed()</summary>
        </member>
        <member name="P:DataAdminCommonLib.Fakes.ShimDataAdminMessageFactory.ShimDexportChangePrivilage.AllInstances.CollectSQGAllowedSetBoolean">
            <summary>Sets the shim of DexportChangePrivilage.set_CollectSQGAllowed(Boolean value)</summary>
        </member>
        <member name="P:DataAdminCommonLib.Fakes.ShimDataAdminMessageFactory.ShimDexportChangePrivilage.AllInstances.DatanetEnabledGet">
            <summary>Sets the shim of DexportChangePrivilage.get_DatanetEnabled()</summary>
        </member>
        <member name="P:DataAdminCommonLib.Fakes.ShimDataAdminMessageFactory.ShimDexportChangePrivilage.AllInstances.DatanetEnabledSetBoolean">
            <summary>Sets the shim of DexportChangePrivilage.set_DatanetEnabled(Boolean value)</summary>
        </member>
        <member name="P:DataAdminCommonLib.Fakes.ShimDataAdminMessageFactory.ShimDexportChangePrivilage.AllInstances.LocalDBAllowedGet">
            <summary>Sets the shim of DexportChangePrivilage.get_LocalDBAllowed()</summary>
        </member>
        <member name="P:DataAdminCommonLib.Fakes.ShimDataAdminMessageFactory.ShimDexportChangePrivilage.AllInstances.LocalDBAllowedSetBoolean">
            <summary>Sets the shim of DexportChangePrivilage.set_LocalDBAllowed(Boolean value)</summary>
        </member>
        <member name="P:DataAdminCommonLib.Fakes.ShimDataAdminMessageFactory.ShimDexportChangePrivilage.AllInstances.MissingBarFAllowedGet">
            <summary>Sets the shim of DexportChangePrivilage.get_MissingBarFAllowed()</summary>
        </member>
        <member name="P:DataAdminCommonLib.Fakes.ShimDataAdminMessageFactory.ShimDexportChangePrivilage.AllInstances.MissingBarFAllowedSetBoolean">
            <summary>Sets the shim of DexportChangePrivilage.set_MissingBarFAllowed(Boolean value)</summary>
        </member>
        <member name="P:DataAdminCommonLib.Fakes.ShimDataAdminMessageFactory.ShimDexportChangePrivilage.AllInstances.MsgTypeGet">
            <summary>Sets the shim of DexportChangePrivilage.get_MsgType()</summary>
        </member>
        <member name="P:DataAdminCommonLib.Fakes.ShimDataAdminMessageFactory.ShimDexportChangePrivilage.AllInstances.ServerMessageGet">
            <summary>Sets the shim of DexportChangePrivilage.get_ServerMessage()</summary>
        </member>
        <member name="P:DataAdminCommonLib.Fakes.ShimDataAdminMessageFactory.ShimDexportChangePrivilage.AllInstances.ServerMessageSetString">
            <summary>Sets the shim of DexportChangePrivilage.set_ServerMessage(String value)</summary>
        </member>
        <member name="P:DataAdminCommonLib.Fakes.ShimDataAdminMessageFactory.ShimDexportChangePrivilage.AllInstances.SharedDBAllowedGet">
            <summary>Sets the shim of DexportChangePrivilage.get_SharedDBAllowed()</summary>
        </member>
        <member name="P:DataAdminCommonLib.Fakes.ShimDataAdminMessageFactory.ShimDexportChangePrivilage.AllInstances.SharedDBAllowedSetBoolean">
            <summary>Sets the shim of DexportChangePrivilage.set_SharedDBAllowed(Boolean value)</summary>
        </member>
        <member name="P:DataAdminCommonLib.Fakes.ShimDataAdminMessageFactory.ShimDexportChangePrivilage.AllInstances.TicknetEnabledGet">
            <summary>Sets the shim of DexportChangePrivilage.get_TicknetEnabled()</summary>
        </member>
        <member name="P:DataAdminCommonLib.Fakes.ShimDataAdminMessageFactory.ShimDexportChangePrivilage.AllInstances.TicknetEnabledSetBoolean">
            <summary>Sets the shim of DexportChangePrivilage.set_TicknetEnabled(Boolean value)</summary>
        </member>
        <member name="T:DataAdminCommonLib.Fakes.ShimDataAdminMessageFactory.ShimDexportLogMessage">
            <summary>Shim type of DataAdminCommonLib.DataAdminMessageFactory+DexportLogMessage</summary>
        </member>
        <member name="M:DataAdminCommonLib.Fakes.ShimDataAdminMessageFactory.ShimDexportLogMessage.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:DataAdminCommonLib.Fakes.ShimDataAdminMessageFactory.ShimDexportLogMessage.#ctor(DataAdminCommonLib.DataAdminMessageFactory.DexportLogMessage)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:DataAdminCommonLib.Fakes.ShimDataAdminMessageFactory.ShimDexportLogMessage.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:DataAdminCommonLib.Fakes.ShimDataAdminMessageFactory.ShimDexportLogMessage.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:DataAdminCommonLib.Fakes.ShimDataAdminMessageFactory.ShimDexportLogMessage.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:DataAdminCommonLib.Fakes.ShimDataAdminMessageFactory.ShimDexportLogMessage.Constructor">
            <summary>Sets the shim of DexportLogMessage.DexportLogMessage()</summary>
        </member>
        <member name="P:DataAdminCommonLib.Fakes.ShimDataAdminMessageFactory.ShimDexportLogMessage.ConstructorInt32DateTimeStringDexportLogMessageDataAdminMessageFactoryLogStringDexportLogMessageDataAdminMessageFactoryStatus">
            <summary>Sets the shim of DexportLogMessage.DexportLogMessage(Int32 userId, DateTime time, String symbol, Log type, String group, Status status)</summary>
        </member>
        <member name="P:DataAdminCommonLib.Fakes.ShimDataAdminMessageFactory.ShimDexportLogMessage.DepthValueGet">
            <summary>Sets the shim of DexportLogMessage.get_DepthValue()</summary>
        </member>
        <member name="P:DataAdminCommonLib.Fakes.ShimDataAdminMessageFactory.ShimDexportLogMessage.DepthValueSetInt32">
            <summary>Sets the shim of DexportLogMessage.set_DepthValue(Int32 value)</summary>
        </member>
        <member name="P:DataAdminCommonLib.Fakes.ShimDataAdminMessageFactory.ShimDexportLogMessage.GroupGet">
            <summary>Sets the shim of DexportLogMessage.get_Group()</summary>
        </member>
        <member name="P:DataAdminCommonLib.Fakes.ShimDataAdminMessageFactory.ShimDexportLogMessage.GroupSetString">
            <summary>Sets the shim of DexportLogMessage.set_Group(String value)</summary>
        </member>
        <member name="P:DataAdminCommonLib.Fakes.ShimDataAdminMessageFactory.ShimDexportLogMessage.LogTypeGet">
            <summary>Sets the shim of DexportLogMessage.get_LogType()</summary>
        </member>
        <member name="P:DataAdminCommonLib.Fakes.ShimDataAdminMessageFactory.ShimDexportLogMessage.LogTypeSetDexportLogMessageDataAdminMessageFactoryLog">
            <summary>Sets the shim of DexportLogMessage.set_LogType(Log value)</summary>
        </member>
        <member name="P:DataAdminCommonLib.Fakes.ShimDataAdminMessageFactory.ShimDexportLogMessage.MsgTypeGet">
            <summary>Sets the shim of DexportLogMessage.get_MsgType()</summary>
        </member>
        <member name="P:DataAdminCommonLib.Fakes.ShimDataAdminMessageFactory.ShimDexportLogMessage.OperationStatusGet">
            <summary>Sets the shim of DexportLogMessage.get_OperationStatus()</summary>
        </member>
        <member name="P:DataAdminCommonLib.Fakes.ShimDataAdminMessageFactory.ShimDexportLogMessage.OperationStatusSetDexportLogMessageDataAdminMessageFactoryStatus">
            <summary>Sets the shim of DexportLogMessage.set_OperationStatus(Status value)</summary>
        </member>
        <member name="P:DataAdminCommonLib.Fakes.ShimDataAdminMessageFactory.ShimDexportLogMessage.SymbolGet">
            <summary>Sets the shim of DexportLogMessage.get_Symbol()</summary>
        </member>
        <member name="P:DataAdminCommonLib.Fakes.ShimDataAdminMessageFactory.ShimDexportLogMessage.SymbolSetString">
            <summary>Sets the shim of DexportLogMessage.set_Symbol(String value)</summary>
        </member>
        <member name="P:DataAdminCommonLib.Fakes.ShimDataAdminMessageFactory.ShimDexportLogMessage.TimeGet">
            <summary>Sets the shim of DexportLogMessage.get_Time()</summary>
        </member>
        <member name="P:DataAdminCommonLib.Fakes.ShimDataAdminMessageFactory.ShimDexportLogMessage.TimeSetDateTime">
            <summary>Sets the shim of DexportLogMessage.set_Time(DateTime value)</summary>
        </member>
        <member name="P:DataAdminCommonLib.Fakes.ShimDataAdminMessageFactory.ShimDexportLogMessage.UserIDGet">
            <summary>Sets the shim of DexportLogMessage.get_UserID()</summary>
        </member>
        <member name="P:DataAdminCommonLib.Fakes.ShimDataAdminMessageFactory.ShimDexportLogMessage.UserIDSetInt32">
            <summary>Sets the shim of DexportLogMessage.set_UserID(Int32 value)</summary>
        </member>
        <member name="P:DataAdminCommonLib.Fakes.ShimDataAdminMessageFactory.ShimDexportLogMessage._msgTypeGet">
            <summary>Sets the shim of DexportLogMessage.get__msgType()</summary>
        </member>
        <member name="P:DataAdminCommonLib.Fakes.ShimDataAdminMessageFactory.ShimDexportLogMessage._msgTypeSetInt32">
            <summary>Sets the shim of DexportLogMessage.set__msgType(Int32 value)</summary>
        </member>
        <member name="T:DataAdminCommonLib.Fakes.ShimDataAdminMessageFactory.ShimDexportLogMessage.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:DataAdminCommonLib.Fakes.ShimDataAdminMessageFactory.ShimDexportLogMessage.AllInstances.DepthValueGet">
            <summary>Sets the shim of DexportLogMessage.get_DepthValue()</summary>
        </member>
        <member name="P:DataAdminCommonLib.Fakes.ShimDataAdminMessageFactory.ShimDexportLogMessage.AllInstances.DepthValueSetInt32">
            <summary>Sets the shim of DexportLogMessage.set_DepthValue(Int32 value)</summary>
        </member>
        <member name="P:DataAdminCommonLib.Fakes.ShimDataAdminMessageFactory.ShimDexportLogMessage.AllInstances.GroupGet">
            <summary>Sets the shim of DexportLogMessage.get_Group()</summary>
        </member>
        <member name="P:DataAdminCommonLib.Fakes.ShimDataAdminMessageFactory.ShimDexportLogMessage.AllInstances.GroupSetString">
            <summary>Sets the shim of DexportLogMessage.set_Group(String value)</summary>
        </member>
        <member name="P:DataAdminCommonLib.Fakes.ShimDataAdminMessageFactory.ShimDexportLogMessage.AllInstances.LogTypeGet">
            <summary>Sets the shim of DexportLogMessage.get_LogType()</summary>
        </member>
        <member name="P:DataAdminCommonLib.Fakes.ShimDataAdminMessageFactory.ShimDexportLogMessage.AllInstances.LogTypeSetDexportLogMessageDataAdminMessageFactoryLog">
            <summary>Sets the shim of DexportLogMessage.set_LogType(Log value)</summary>
        </member>
        <member name="P:DataAdminCommonLib.Fakes.ShimDataAdminMessageFactory.ShimDexportLogMessage.AllInstances.MsgTypeGet">
            <summary>Sets the shim of DexportLogMessage.get_MsgType()</summary>
        </member>
        <member name="P:DataAdminCommonLib.Fakes.ShimDataAdminMessageFactory.ShimDexportLogMessage.AllInstances.OperationStatusGet">
            <summary>Sets the shim of DexportLogMessage.get_OperationStatus()</summary>
        </member>
        <member name="P:DataAdminCommonLib.Fakes.ShimDataAdminMessageFactory.ShimDexportLogMessage.AllInstances.OperationStatusSetDexportLogMessageDataAdminMessageFactoryStatus">
            <summary>Sets the shim of DexportLogMessage.set_OperationStatus(Status value)</summary>
        </member>
        <member name="P:DataAdminCommonLib.Fakes.ShimDataAdminMessageFactory.ShimDexportLogMessage.AllInstances.SymbolGet">
            <summary>Sets the shim of DexportLogMessage.get_Symbol()</summary>
        </member>
        <member name="P:DataAdminCommonLib.Fakes.ShimDataAdminMessageFactory.ShimDexportLogMessage.AllInstances.SymbolSetString">
            <summary>Sets the shim of DexportLogMessage.set_Symbol(String value)</summary>
        </member>
        <member name="P:DataAdminCommonLib.Fakes.ShimDataAdminMessageFactory.ShimDexportLogMessage.AllInstances.TimeGet">
            <summary>Sets the shim of DexportLogMessage.get_Time()</summary>
        </member>
        <member name="P:DataAdminCommonLib.Fakes.ShimDataAdminMessageFactory.ShimDexportLogMessage.AllInstances.TimeSetDateTime">
            <summary>Sets the shim of DexportLogMessage.set_Time(DateTime value)</summary>
        </member>
        <member name="P:DataAdminCommonLib.Fakes.ShimDataAdminMessageFactory.ShimDexportLogMessage.AllInstances.UserIDGet">
            <summary>Sets the shim of DexportLogMessage.get_UserID()</summary>
        </member>
        <member name="P:DataAdminCommonLib.Fakes.ShimDataAdminMessageFactory.ShimDexportLogMessage.AllInstances.UserIDSetInt32">
            <summary>Sets the shim of DexportLogMessage.set_UserID(Int32 value)</summary>
        </member>
        <member name="P:DataAdminCommonLib.Fakes.ShimDataAdminMessageFactory.ShimDexportLogMessage.AllInstances._msgTypeGet">
            <summary>Sets the shim of DexportLogMessage.get__msgType()</summary>
        </member>
        <member name="P:DataAdminCommonLib.Fakes.ShimDataAdminMessageFactory.ShimDexportLogMessage.AllInstances._msgTypeSetInt32">
            <summary>Sets the shim of DexportLogMessage.set__msgType(Int32 value)</summary>
        </member>
        <member name="T:DataAdminCommonLib.Fakes.ShimDataAdminMessageFactory.ShimDexportLogoutMessage">
            <summary>Shim type of DataAdminCommonLib.DataAdminMessageFactory+DexportLogoutMessage</summary>
        </member>
        <member name="M:DataAdminCommonLib.Fakes.ShimDataAdminMessageFactory.ShimDexportLogoutMessage.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:DataAdminCommonLib.Fakes.ShimDataAdminMessageFactory.ShimDexportLogoutMessage.#ctor(DataAdminCommonLib.DataAdminMessageFactory.DexportLogoutMessage)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:DataAdminCommonLib.Fakes.ShimDataAdminMessageFactory.ShimDexportLogoutMessage.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:DataAdminCommonLib.Fakes.ShimDataAdminMessageFactory.ShimDexportLogoutMessage.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:DataAdminCommonLib.Fakes.ShimDataAdminMessageFactory.ShimDexportLogoutMessage.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:DataAdminCommonLib.Fakes.ShimDataAdminMessageFactory.ShimDexportLogoutMessage.Constructor">
            <summary>Sets the shim of DexportLogoutMessage.DexportLogoutMessage()</summary>
        </member>
        <member name="P:DataAdminCommonLib.Fakes.ShimDataAdminMessageFactory.ShimDexportLogoutMessage.MsgTypeGet">
            <summary>Sets the shim of DexportLogoutMessage.get_MsgType()</summary>
        </member>
        <member name="P:DataAdminCommonLib.Fakes.ShimDataAdminMessageFactory.ShimDexportLogoutMessage.ServerMessageGet">
            <summary>Sets the shim of DexportLogoutMessage.get_ServerMessage()</summary>
        </member>
        <member name="P:DataAdminCommonLib.Fakes.ShimDataAdminMessageFactory.ShimDexportLogoutMessage.ServerMessageSetString">
            <summary>Sets the shim of DexportLogoutMessage.set_ServerMessage(String value)</summary>
        </member>
        <member name="T:DataAdminCommonLib.Fakes.ShimDataAdminMessageFactory.ShimDexportLogoutMessage.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:DataAdminCommonLib.Fakes.ShimDataAdminMessageFactory.ShimDexportLogoutMessage.AllInstances.MsgTypeGet">
            <summary>Sets the shim of DexportLogoutMessage.get_MsgType()</summary>
        </member>
        <member name="P:DataAdminCommonLib.Fakes.ShimDataAdminMessageFactory.ShimDexportLogoutMessage.AllInstances.ServerMessageGet">
            <summary>Sets the shim of DexportLogoutMessage.get_ServerMessage()</summary>
        </member>
        <member name="P:DataAdminCommonLib.Fakes.ShimDataAdminMessageFactory.ShimDexportLogoutMessage.AllInstances.ServerMessageSetString">
            <summary>Sets the shim of DexportLogoutMessage.set_ServerMessage(String value)</summary>
        </member>
        <member name="T:DataAdminCommonLib.Fakes.ShimDataAdminMessageFactory.ShimLogMessage">
            <summary>Shim type of DataAdminCommonLib.DataAdminMessageFactory+LogMessage</summary>
        </member>
        <member name="M:DataAdminCommonLib.Fakes.ShimDataAdminMessageFactory.ShimLogMessage.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:DataAdminCommonLib.Fakes.ShimDataAdminMessageFactory.ShimLogMessage.#ctor(DataAdminCommonLib.DataAdminMessageFactory.LogMessage)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:DataAdminCommonLib.Fakes.ShimDataAdminMessageFactory.ShimLogMessage.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:DataAdminCommonLib.Fakes.ShimDataAdminMessageFactory.ShimLogMessage.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:DataAdminCommonLib.Fakes.ShimDataAdminMessageFactory.ShimLogMessage.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:DataAdminCommonLib.Fakes.ShimDataAdminMessageFactory.ShimLogMessage.Constructor">
            <summary>Sets the shim of LogMessage.LogMessage()</summary>
        </member>
        <member name="P:DataAdminCommonLib.Fakes.ShimDataAdminMessageFactory.ShimLogMessage.ConstructorInt32DateTimeStringLogMessageDataAdminMessageFactoryLogStringLogMessageDataAdminMessageFactoryStatus">
            <summary>Sets the shim of LogMessage.LogMessage(Int32 userId, DateTime time, String symbol, Log type, String group, Status status)</summary>
        </member>
        <member name="P:DataAdminCommonLib.Fakes.ShimDataAdminMessageFactory.ShimLogMessage.DepthValueGet">
            <summary>Sets the shim of LogMessage.get_DepthValue()</summary>
        </member>
        <member name="P:DataAdminCommonLib.Fakes.ShimDataAdminMessageFactory.ShimLogMessage.DepthValueSetInt32">
            <summary>Sets the shim of LogMessage.set_DepthValue(Int32 value)</summary>
        </member>
        <member name="P:DataAdminCommonLib.Fakes.ShimDataAdminMessageFactory.ShimLogMessage.GroupGet">
            <summary>Sets the shim of LogMessage.get_Group()</summary>
        </member>
        <member name="P:DataAdminCommonLib.Fakes.ShimDataAdminMessageFactory.ShimLogMessage.GroupSetString">
            <summary>Sets the shim of LogMessage.set_Group(String value)</summary>
        </member>
        <member name="P:DataAdminCommonLib.Fakes.ShimDataAdminMessageFactory.ShimLogMessage.LogTypeGet">
            <summary>Sets the shim of LogMessage.get_LogType()</summary>
        </member>
        <member name="P:DataAdminCommonLib.Fakes.ShimDataAdminMessageFactory.ShimLogMessage.LogTypeSetLogMessageDataAdminMessageFactoryLog">
            <summary>Sets the shim of LogMessage.set_LogType(Log value)</summary>
        </member>
        <member name="P:DataAdminCommonLib.Fakes.ShimDataAdminMessageFactory.ShimLogMessage.MsgTypeGet">
            <summary>Sets the shim of LogMessage.get_MsgType()</summary>
        </member>
        <member name="P:DataAdminCommonLib.Fakes.ShimDataAdminMessageFactory.ShimLogMessage.OperationStatusGet">
            <summary>Sets the shim of LogMessage.get_OperationStatus()</summary>
        </member>
        <member name="P:DataAdminCommonLib.Fakes.ShimDataAdminMessageFactory.ShimLogMessage.OperationStatusSetLogMessageDataAdminMessageFactoryStatus">
            <summary>Sets the shim of LogMessage.set_OperationStatus(Status value)</summary>
        </member>
        <member name="P:DataAdminCommonLib.Fakes.ShimDataAdminMessageFactory.ShimLogMessage.SymbolGet">
            <summary>Sets the shim of LogMessage.get_Symbol()</summary>
        </member>
        <member name="P:DataAdminCommonLib.Fakes.ShimDataAdminMessageFactory.ShimLogMessage.SymbolSetString">
            <summary>Sets the shim of LogMessage.set_Symbol(String value)</summary>
        </member>
        <member name="P:DataAdminCommonLib.Fakes.ShimDataAdminMessageFactory.ShimLogMessage.TimeGet">
            <summary>Sets the shim of LogMessage.get_Time()</summary>
        </member>
        <member name="P:DataAdminCommonLib.Fakes.ShimDataAdminMessageFactory.ShimLogMessage.TimeSetDateTime">
            <summary>Sets the shim of LogMessage.set_Time(DateTime value)</summary>
        </member>
        <member name="P:DataAdminCommonLib.Fakes.ShimDataAdminMessageFactory.ShimLogMessage.UserIDGet">
            <summary>Sets the shim of LogMessage.get_UserID()</summary>
        </member>
        <member name="P:DataAdminCommonLib.Fakes.ShimDataAdminMessageFactory.ShimLogMessage.UserIDSetInt32">
            <summary>Sets the shim of LogMessage.set_UserID(Int32 value)</summary>
        </member>
        <member name="P:DataAdminCommonLib.Fakes.ShimDataAdminMessageFactory.ShimLogMessage._msgTypeGet">
            <summary>Sets the shim of LogMessage.get__msgType()</summary>
        </member>
        <member name="P:DataAdminCommonLib.Fakes.ShimDataAdminMessageFactory.ShimLogMessage._msgTypeSetInt32">
            <summary>Sets the shim of LogMessage.set__msgType(Int32 value)</summary>
        </member>
        <member name="T:DataAdminCommonLib.Fakes.ShimDataAdminMessageFactory.ShimLogMessage.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:DataAdminCommonLib.Fakes.ShimDataAdminMessageFactory.ShimLogMessage.AllInstances.DepthValueGet">
            <summary>Sets the shim of LogMessage.get_DepthValue()</summary>
        </member>
        <member name="P:DataAdminCommonLib.Fakes.ShimDataAdminMessageFactory.ShimLogMessage.AllInstances.DepthValueSetInt32">
            <summary>Sets the shim of LogMessage.set_DepthValue(Int32 value)</summary>
        </member>
        <member name="P:DataAdminCommonLib.Fakes.ShimDataAdminMessageFactory.ShimLogMessage.AllInstances.GroupGet">
            <summary>Sets the shim of LogMessage.get_Group()</summary>
        </member>
        <member name="P:DataAdminCommonLib.Fakes.ShimDataAdminMessageFactory.ShimLogMessage.AllInstances.GroupSetString">
            <summary>Sets the shim of LogMessage.set_Group(String value)</summary>
        </member>
        <member name="P:DataAdminCommonLib.Fakes.ShimDataAdminMessageFactory.ShimLogMessage.AllInstances.LogTypeGet">
            <summary>Sets the shim of LogMessage.get_LogType()</summary>
        </member>
        <member name="P:DataAdminCommonLib.Fakes.ShimDataAdminMessageFactory.ShimLogMessage.AllInstances.LogTypeSetLogMessageDataAdminMessageFactoryLog">
            <summary>Sets the shim of LogMessage.set_LogType(Log value)</summary>
        </member>
        <member name="P:DataAdminCommonLib.Fakes.ShimDataAdminMessageFactory.ShimLogMessage.AllInstances.MsgTypeGet">
            <summary>Sets the shim of LogMessage.get_MsgType()</summary>
        </member>
        <member name="P:DataAdminCommonLib.Fakes.ShimDataAdminMessageFactory.ShimLogMessage.AllInstances.OperationStatusGet">
            <summary>Sets the shim of LogMessage.get_OperationStatus()</summary>
        </member>
        <member name="P:DataAdminCommonLib.Fakes.ShimDataAdminMessageFactory.ShimLogMessage.AllInstances.OperationStatusSetLogMessageDataAdminMessageFactoryStatus">
            <summary>Sets the shim of LogMessage.set_OperationStatus(Status value)</summary>
        </member>
        <member name="P:DataAdminCommonLib.Fakes.ShimDataAdminMessageFactory.ShimLogMessage.AllInstances.SymbolGet">
            <summary>Sets the shim of LogMessage.get_Symbol()</summary>
        </member>
        <member name="P:DataAdminCommonLib.Fakes.ShimDataAdminMessageFactory.ShimLogMessage.AllInstances.SymbolSetString">
            <summary>Sets the shim of LogMessage.set_Symbol(String value)</summary>
        </member>
        <member name="P:DataAdminCommonLib.Fakes.ShimDataAdminMessageFactory.ShimLogMessage.AllInstances.TimeGet">
            <summary>Sets the shim of LogMessage.get_Time()</summary>
        </member>
        <member name="P:DataAdminCommonLib.Fakes.ShimDataAdminMessageFactory.ShimLogMessage.AllInstances.TimeSetDateTime">
            <summary>Sets the shim of LogMessage.set_Time(DateTime value)</summary>
        </member>
        <member name="P:DataAdminCommonLib.Fakes.ShimDataAdminMessageFactory.ShimLogMessage.AllInstances.UserIDGet">
            <summary>Sets the shim of LogMessage.get_UserID()</summary>
        </member>
        <member name="P:DataAdminCommonLib.Fakes.ShimDataAdminMessageFactory.ShimLogMessage.AllInstances.UserIDSetInt32">
            <summary>Sets the shim of LogMessage.set_UserID(Int32 value)</summary>
        </member>
        <member name="P:DataAdminCommonLib.Fakes.ShimDataAdminMessageFactory.ShimLogMessage.AllInstances._msgTypeGet">
            <summary>Sets the shim of LogMessage.get__msgType()</summary>
        </member>
        <member name="P:DataAdminCommonLib.Fakes.ShimDataAdminMessageFactory.ShimLogMessage.AllInstances._msgTypeSetInt32">
            <summary>Sets the shim of LogMessage.set__msgType(Int32 value)</summary>
        </member>
        <member name="T:DataAdminCommonLib.Fakes.ShimDataAdminMessageFactory.ShimLoginMessage">
            <summary>Shim type of DataAdminCommonLib.DataAdminMessageFactory+LoginMessage</summary>
        </member>
        <member name="M:DataAdminCommonLib.Fakes.ShimDataAdminMessageFactory.ShimLoginMessage.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:DataAdminCommonLib.Fakes.ShimDataAdminMessageFactory.ShimLoginMessage.#ctor(DataAdminCommonLib.DataAdminMessageFactory.LoginMessage)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:DataAdminCommonLib.Fakes.ShimDataAdminMessageFactory.ShimLoginMessage.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:DataAdminCommonLib.Fakes.ShimDataAdminMessageFactory.ShimLoginMessage.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:DataAdminCommonLib.Fakes.ShimDataAdminMessageFactory.ShimLoginMessage.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:DataAdminCommonLib.Fakes.ShimDataAdminMessageFactory.ShimLoginMessage.ConstructorStringStringChar">
            <summary>Sets the shim of LoginMessage.LoginMessage(String usname, String passw, Char netName)</summary>
        </member>
        <member name="P:DataAdminCommonLib.Fakes.ShimDataAdminMessageFactory.ShimLoginMessage.MsgTypeGet">
            <summary>Sets the shim of LoginMessage.get_MsgType()</summary>
        </member>
        <member name="P:DataAdminCommonLib.Fakes.ShimDataAdminMessageFactory.ShimLoginMessage.NetTypeGet">
            <summary>Sets the shim of LoginMessage.get_NetType()</summary>
        </member>
        <member name="P:DataAdminCommonLib.Fakes.ShimDataAdminMessageFactory.ShimLoginMessage.PasswordMD5Get">
            <summary>Sets the shim of LoginMessage.get_PasswordMD5()</summary>
        </member>
        <member name="P:DataAdminCommonLib.Fakes.ShimDataAdminMessageFactory.ShimLoginMessage.ServerMessageGet">
            <summary>Sets the shim of LoginMessage.get_ServerMessage()</summary>
        </member>
        <member name="P:DataAdminCommonLib.Fakes.ShimDataAdminMessageFactory.ShimLoginMessage.ServerMessageSetString">
            <summary>Sets the shim of LoginMessage.set_ServerMessage(String value)</summary>
        </member>
        <member name="P:DataAdminCommonLib.Fakes.ShimDataAdminMessageFactory.ShimLoginMessage.UsernameMD5Get">
            <summary>Sets the shim of LoginMessage.get_UsernameMD5()</summary>
        </member>
        <member name="T:DataAdminCommonLib.Fakes.ShimDataAdminMessageFactory.ShimLoginMessage.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:DataAdminCommonLib.Fakes.ShimDataAdminMessageFactory.ShimLoginMessage.AllInstances.MsgTypeGet">
            <summary>Sets the shim of LoginMessage.get_MsgType()</summary>
        </member>
        <member name="P:DataAdminCommonLib.Fakes.ShimDataAdminMessageFactory.ShimLoginMessage.AllInstances.NetTypeGet">
            <summary>Sets the shim of LoginMessage.get_NetType()</summary>
        </member>
        <member name="P:DataAdminCommonLib.Fakes.ShimDataAdminMessageFactory.ShimLoginMessage.AllInstances.PasswordMD5Get">
            <summary>Sets the shim of LoginMessage.get_PasswordMD5()</summary>
        </member>
        <member name="P:DataAdminCommonLib.Fakes.ShimDataAdminMessageFactory.ShimLoginMessage.AllInstances.ServerMessageGet">
            <summary>Sets the shim of LoginMessage.get_ServerMessage()</summary>
        </member>
        <member name="P:DataAdminCommonLib.Fakes.ShimDataAdminMessageFactory.ShimLoginMessage.AllInstances.ServerMessageSetString">
            <summary>Sets the shim of LoginMessage.set_ServerMessage(String value)</summary>
        </member>
        <member name="P:DataAdminCommonLib.Fakes.ShimDataAdminMessageFactory.ShimLoginMessage.AllInstances.UsernameMD5Get">
            <summary>Sets the shim of LoginMessage.get_UsernameMD5()</summary>
        </member>
        <member name="T:DataAdminCommonLib.Fakes.ShimDataAdminMessageFactory.ShimLoginRespond">
            <summary>Shim type of DataAdminCommonLib.DataAdminMessageFactory+LoginRespond</summary>
        </member>
        <member name="M:DataAdminCommonLib.Fakes.ShimDataAdminMessageFactory.ShimLoginRespond.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:DataAdminCommonLib.Fakes.ShimDataAdminMessageFactory.ShimLoginRespond.#ctor(DataAdminCommonLib.DataAdminMessageFactory.LoginRespond)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:DataAdminCommonLib.Fakes.ShimDataAdminMessageFactory.ShimLoginRespond.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:DataAdminCommonLib.Fakes.ShimDataAdminMessageFactory.ShimLoginRespond.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:DataAdminCommonLib.Fakes.ShimDataAdminMessageFactory.ShimLoginRespond.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:DataAdminCommonLib.Fakes.ShimDataAdminMessageFactory.ShimLoginRespond.ConstructorBooleanBooleanBoolean">
            <summary>Sets the shim of LoginRespond.LoginRespond(Boolean isLoggedOn, Boolean blocked, Boolean userNotExist)</summary>
        </member>
        <member name="P:DataAdminCommonLib.Fakes.ShimDataAdminMessageFactory.ShimLoginRespond.IsBlockedGet">
            <summary>Sets the shim of LoginRespond.get_IsBlocked()</summary>
        </member>
        <member name="P:DataAdminCommonLib.Fakes.ShimDataAdminMessageFactory.ShimLoginRespond.IsLoggedOnGet">
            <summary>Sets the shim of LoginRespond.get_IsLoggedOn()</summary>
        </member>
        <member name="P:DataAdminCommonLib.Fakes.ShimDataAdminMessageFactory.ShimLoginRespond.IsUserNotExistGet">
            <summary>Sets the shim of LoginRespond.get_IsUserNotExist()</summary>
        </member>
        <member name="P:DataAdminCommonLib.Fakes.ShimDataAdminMessageFactory.ShimLoginRespond.MsgTypeGet">
            <summary>Sets the shim of LoginRespond.get_MsgType()</summary>
        </member>
        <member name="P:DataAdminCommonLib.Fakes.ShimDataAdminMessageFactory.ShimLoginRespond.ServerMessageGet">
            <summary>Sets the shim of LoginRespond.get_ServerMessage()</summary>
        </member>
        <member name="P:DataAdminCommonLib.Fakes.ShimDataAdminMessageFactory.ShimLoginRespond.ServerMessageSetString">
            <summary>Sets the shim of LoginRespond.set_ServerMessage(String value)</summary>
        </member>
        <member name="T:DataAdminCommonLib.Fakes.ShimDataAdminMessageFactory.ShimLoginRespond.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:DataAdminCommonLib.Fakes.ShimDataAdminMessageFactory.ShimLoginRespond.AllInstances.IsBlockedGet">
            <summary>Sets the shim of LoginRespond.get_IsBlocked()</summary>
        </member>
        <member name="P:DataAdminCommonLib.Fakes.ShimDataAdminMessageFactory.ShimLoginRespond.AllInstances.IsLoggedOnGet">
            <summary>Sets the shim of LoginRespond.get_IsLoggedOn()</summary>
        </member>
        <member name="P:DataAdminCommonLib.Fakes.ShimDataAdminMessageFactory.ShimLoginRespond.AllInstances.IsUserNotExistGet">
            <summary>Sets the shim of LoginRespond.get_IsUserNotExist()</summary>
        </member>
        <member name="P:DataAdminCommonLib.Fakes.ShimDataAdminMessageFactory.ShimLoginRespond.AllInstances.MsgTypeGet">
            <summary>Sets the shim of LoginRespond.get_MsgType()</summary>
        </member>
        <member name="P:DataAdminCommonLib.Fakes.ShimDataAdminMessageFactory.ShimLoginRespond.AllInstances.ServerMessageGet">
            <summary>Sets the shim of LoginRespond.get_ServerMessage()</summary>
        </member>
        <member name="P:DataAdminCommonLib.Fakes.ShimDataAdminMessageFactory.ShimLoginRespond.AllInstances.ServerMessageSetString">
            <summary>Sets the shim of LoginRespond.set_ServerMessage(String value)</summary>
        </member>
        <member name="T:DataAdminCommonLib.Fakes.ShimDataAdminMessageFactory.ShimLogoutMessage">
            <summary>Shim type of DataAdminCommonLib.DataAdminMessageFactory+LogoutMessage</summary>
        </member>
        <member name="M:DataAdminCommonLib.Fakes.ShimDataAdminMessageFactory.ShimLogoutMessage.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:DataAdminCommonLib.Fakes.ShimDataAdminMessageFactory.ShimLogoutMessage.#ctor(DataAdminCommonLib.DataAdminMessageFactory.LogoutMessage)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:DataAdminCommonLib.Fakes.ShimDataAdminMessageFactory.ShimLogoutMessage.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:DataAdminCommonLib.Fakes.ShimDataAdminMessageFactory.ShimLogoutMessage.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:DataAdminCommonLib.Fakes.ShimDataAdminMessageFactory.ShimLogoutMessage.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:DataAdminCommonLib.Fakes.ShimDataAdminMessageFactory.ShimLogoutMessage.Constructor">
            <summary>Sets the shim of LogoutMessage.LogoutMessage()</summary>
        </member>
        <member name="P:DataAdminCommonLib.Fakes.ShimDataAdminMessageFactory.ShimLogoutMessage.MsgTypeGet">
            <summary>Sets the shim of LogoutMessage.get_MsgType()</summary>
        </member>
        <member name="P:DataAdminCommonLib.Fakes.ShimDataAdminMessageFactory.ShimLogoutMessage.ServerMessageGet">
            <summary>Sets the shim of LogoutMessage.get_ServerMessage()</summary>
        </member>
        <member name="P:DataAdminCommonLib.Fakes.ShimDataAdminMessageFactory.ShimLogoutMessage.ServerMessageSetString">
            <summary>Sets the shim of LogoutMessage.set_ServerMessage(String value)</summary>
        </member>
        <member name="T:DataAdminCommonLib.Fakes.ShimDataAdminMessageFactory.ShimLogoutMessage.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:DataAdminCommonLib.Fakes.ShimDataAdminMessageFactory.ShimLogoutMessage.AllInstances.MsgTypeGet">
            <summary>Sets the shim of LogoutMessage.get_MsgType()</summary>
        </member>
        <member name="P:DataAdminCommonLib.Fakes.ShimDataAdminMessageFactory.ShimLogoutMessage.AllInstances.ServerMessageGet">
            <summary>Sets the shim of LogoutMessage.get_ServerMessage()</summary>
        </member>
        <member name="P:DataAdminCommonLib.Fakes.ShimDataAdminMessageFactory.ShimLogoutMessage.AllInstances.ServerMessageSetString">
            <summary>Sets the shim of LogoutMessage.set_ServerMessage(String value)</summary>
        </member>
        <member name="T:DataAdminCommonLib.Fakes.ShimDataAdminMessageFactory.ShimTickNetCollectMsg">
            <summary>Shim type of DataAdminCommonLib.DataAdminMessageFactory+TickNetCollectMsg</summary>
        </member>
        <member name="M:DataAdminCommonLib.Fakes.ShimDataAdminMessageFactory.ShimTickNetCollectMsg.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:DataAdminCommonLib.Fakes.ShimDataAdminMessageFactory.ShimTickNetCollectMsg.#ctor(DataAdminCommonLib.DataAdminMessageFactory.TickNetCollectMsg)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:DataAdminCommonLib.Fakes.ShimDataAdminMessageFactory.ShimTickNetCollectMsg.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:DataAdminCommonLib.Fakes.ShimDataAdminMessageFactory.ShimTickNetCollectMsg.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:DataAdminCommonLib.Fakes.ShimDataAdminMessageFactory.ShimTickNetCollectMsg.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:DataAdminCommonLib.Fakes.ShimDataAdminMessageFactory.ShimTickNetCollectMsg.Constructor">
            <summary>Sets the shim of TickNetCollectMsg.TickNetCollectMsg()</summary>
        </member>
        <member name="P:DataAdminCommonLib.Fakes.ShimDataAdminMessageFactory.ShimTickNetCollectMsg.ConstructorInt32DateTimeStringStringTickNetCollectMsgDataAdminMessageFactoryStatus">
            <summary>Sets the shim of TickNetCollectMsg.TickNetCollectMsg(Int32 userId, DateTime time, String symbol, String group, Status status)</summary>
        </member>
        <member name="P:DataAdminCommonLib.Fakes.ShimDataAdminMessageFactory.ShimTickNetCollectMsg.DepthGet">
            <summary>Sets the shim of TickNetCollectMsg.get_Depth()</summary>
        </member>
        <member name="P:DataAdminCommonLib.Fakes.ShimDataAdminMessageFactory.ShimTickNetCollectMsg.DepthSetInt32">
            <summary>Sets the shim of TickNetCollectMsg.set_Depth(Int32 value)</summary>
        </member>
        <member name="P:DataAdminCommonLib.Fakes.ShimDataAdminMessageFactory.ShimTickNetCollectMsg.GroupGet">
            <summary>Sets the shim of TickNetCollectMsg.get_Group()</summary>
        </member>
        <member name="P:DataAdminCommonLib.Fakes.ShimDataAdminMessageFactory.ShimTickNetCollectMsg.GroupSetString">
            <summary>Sets the shim of TickNetCollectMsg.set_Group(String value)</summary>
        </member>
        <member name="P:DataAdminCommonLib.Fakes.ShimDataAdminMessageFactory.ShimTickNetCollectMsg.MsgTypeGet">
            <summary>Sets the shim of TickNetCollectMsg.get_MsgType()</summary>
        </member>
        <member name="P:DataAdminCommonLib.Fakes.ShimDataAdminMessageFactory.ShimTickNetCollectMsg.OperationStatusGet">
            <summary>Sets the shim of TickNetCollectMsg.get_OperationStatus()</summary>
        </member>
        <member name="P:DataAdminCommonLib.Fakes.ShimDataAdminMessageFactory.ShimTickNetCollectMsg.OperationStatusSetTickNetCollectMsgDataAdminMessageFactoryStatus">
            <summary>Sets the shim of TickNetCollectMsg.set_OperationStatus(Status value)</summary>
        </member>
        <member name="P:DataAdminCommonLib.Fakes.ShimDataAdminMessageFactory.ShimTickNetCollectMsg.ServerMessageGet">
            <summary>Sets the shim of TickNetCollectMsg.get_ServerMessage()</summary>
        </member>
        <member name="P:DataAdminCommonLib.Fakes.ShimDataAdminMessageFactory.ShimTickNetCollectMsg.ServerMessageSetString">
            <summary>Sets the shim of TickNetCollectMsg.set_ServerMessage(String value)</summary>
        </member>
        <member name="P:DataAdminCommonLib.Fakes.ShimDataAdminMessageFactory.ShimTickNetCollectMsg.SymbolGet">
            <summary>Sets the shim of TickNetCollectMsg.get_Symbol()</summary>
        </member>
        <member name="P:DataAdminCommonLib.Fakes.ShimDataAdminMessageFactory.ShimTickNetCollectMsg.SymbolSetString">
            <summary>Sets the shim of TickNetCollectMsg.set_Symbol(String value)</summary>
        </member>
        <member name="P:DataAdminCommonLib.Fakes.ShimDataAdminMessageFactory.ShimTickNetCollectMsg.TimeGet">
            <summary>Sets the shim of TickNetCollectMsg.get_Time()</summary>
        </member>
        <member name="P:DataAdminCommonLib.Fakes.ShimDataAdminMessageFactory.ShimTickNetCollectMsg.TimeSetDateTime">
            <summary>Sets the shim of TickNetCollectMsg.set_Time(DateTime value)</summary>
        </member>
        <member name="P:DataAdminCommonLib.Fakes.ShimDataAdminMessageFactory.ShimTickNetCollectMsg.UserIDGet">
            <summary>Sets the shim of TickNetCollectMsg.get_UserID()</summary>
        </member>
        <member name="P:DataAdminCommonLib.Fakes.ShimDataAdminMessageFactory.ShimTickNetCollectMsg.UserIDSetInt32">
            <summary>Sets the shim of TickNetCollectMsg.set_UserID(Int32 value)</summary>
        </member>
        <member name="P:DataAdminCommonLib.Fakes.ShimDataAdminMessageFactory.ShimTickNetCollectMsg._msgTypeGet">
            <summary>Sets the shim of TickNetCollectMsg.get__msgType()</summary>
        </member>
        <member name="P:DataAdminCommonLib.Fakes.ShimDataAdminMessageFactory.ShimTickNetCollectMsg._msgTypeSetInt32">
            <summary>Sets the shim of TickNetCollectMsg.set__msgType(Int32 value)</summary>
        </member>
        <member name="T:DataAdminCommonLib.Fakes.ShimDataAdminMessageFactory.ShimTickNetCollectMsg.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:DataAdminCommonLib.Fakes.ShimDataAdminMessageFactory.ShimTickNetCollectMsg.AllInstances.DepthGet">
            <summary>Sets the shim of TickNetCollectMsg.get_Depth()</summary>
        </member>
        <member name="P:DataAdminCommonLib.Fakes.ShimDataAdminMessageFactory.ShimTickNetCollectMsg.AllInstances.DepthSetInt32">
            <summary>Sets the shim of TickNetCollectMsg.set_Depth(Int32 value)</summary>
        </member>
        <member name="P:DataAdminCommonLib.Fakes.ShimDataAdminMessageFactory.ShimTickNetCollectMsg.AllInstances.GroupGet">
            <summary>Sets the shim of TickNetCollectMsg.get_Group()</summary>
        </member>
        <member name="P:DataAdminCommonLib.Fakes.ShimDataAdminMessageFactory.ShimTickNetCollectMsg.AllInstances.GroupSetString">
            <summary>Sets the shim of TickNetCollectMsg.set_Group(String value)</summary>
        </member>
        <member name="P:DataAdminCommonLib.Fakes.ShimDataAdminMessageFactory.ShimTickNetCollectMsg.AllInstances.MsgTypeGet">
            <summary>Sets the shim of TickNetCollectMsg.get_MsgType()</summary>
        </member>
        <member name="P:DataAdminCommonLib.Fakes.ShimDataAdminMessageFactory.ShimTickNetCollectMsg.AllInstances.OperationStatusGet">
            <summary>Sets the shim of TickNetCollectMsg.get_OperationStatus()</summary>
        </member>
        <member name="P:DataAdminCommonLib.Fakes.ShimDataAdminMessageFactory.ShimTickNetCollectMsg.AllInstances.OperationStatusSetTickNetCollectMsgDataAdminMessageFactoryStatus">
            <summary>Sets the shim of TickNetCollectMsg.set_OperationStatus(Status value)</summary>
        </member>
        <member name="P:DataAdminCommonLib.Fakes.ShimDataAdminMessageFactory.ShimTickNetCollectMsg.AllInstances.ServerMessageGet">
            <summary>Sets the shim of TickNetCollectMsg.get_ServerMessage()</summary>
        </member>
        <member name="P:DataAdminCommonLib.Fakes.ShimDataAdminMessageFactory.ShimTickNetCollectMsg.AllInstances.ServerMessageSetString">
            <summary>Sets the shim of TickNetCollectMsg.set_ServerMessage(String value)</summary>
        </member>
        <member name="P:DataAdminCommonLib.Fakes.ShimDataAdminMessageFactory.ShimTickNetCollectMsg.AllInstances.SymbolGet">
            <summary>Sets the shim of TickNetCollectMsg.get_Symbol()</summary>
        </member>
        <member name="P:DataAdminCommonLib.Fakes.ShimDataAdminMessageFactory.ShimTickNetCollectMsg.AllInstances.SymbolSetString">
            <summary>Sets the shim of TickNetCollectMsg.set_Symbol(String value)</summary>
        </member>
        <member name="P:DataAdminCommonLib.Fakes.ShimDataAdminMessageFactory.ShimTickNetCollectMsg.AllInstances.TimeGet">
            <summary>Sets the shim of TickNetCollectMsg.get_Time()</summary>
        </member>
        <member name="P:DataAdminCommonLib.Fakes.ShimDataAdminMessageFactory.ShimTickNetCollectMsg.AllInstances.TimeSetDateTime">
            <summary>Sets the shim of TickNetCollectMsg.set_Time(DateTime value)</summary>
        </member>
        <member name="P:DataAdminCommonLib.Fakes.ShimDataAdminMessageFactory.ShimTickNetCollectMsg.AllInstances.UserIDGet">
            <summary>Sets the shim of TickNetCollectMsg.get_UserID()</summary>
        </member>
        <member name="P:DataAdminCommonLib.Fakes.ShimDataAdminMessageFactory.ShimTickNetCollectMsg.AllInstances.UserIDSetInt32">
            <summary>Sets the shim of TickNetCollectMsg.set_UserID(Int32 value)</summary>
        </member>
        <member name="P:DataAdminCommonLib.Fakes.ShimDataAdminMessageFactory.ShimTickNetCollectMsg.AllInstances._msgTypeGet">
            <summary>Sets the shim of TickNetCollectMsg.get__msgType()</summary>
        </member>
        <member name="P:DataAdminCommonLib.Fakes.ShimDataAdminMessageFactory.ShimTickNetCollectMsg.AllInstances._msgTypeSetInt32">
            <summary>Sets the shim of TickNetCollectMsg.set__msgType(Int32 value)</summary>
        </member>
        <member name="T:DataAdminCommonLib.Fakes.ShimDataNormalizatorMessageFactory">
            <summary>Shim type of DataAdminCommonLib.DataNormalizatorMessageFactory</summary>
        </member>
        <member name="M:DataAdminCommonLib.Fakes.ShimDataNormalizatorMessageFactory.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:DataAdminCommonLib.Fakes.ShimDataNormalizatorMessageFactory.#ctor(DataAdminCommonLib.DataNormalizatorMessageFactory)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:DataAdminCommonLib.Fakes.ShimDataNormalizatorMessageFactory.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:DataAdminCommonLib.Fakes.ShimDataNormalizatorMessageFactory.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:DataAdminCommonLib.Fakes.ShimDataNormalizatorMessageFactory.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:DataAdminCommonLib.Fakes.ShimDataNormalizatorMessageFactory.Constructor">
            <summary>Sets the shim of DataNormalizatorMessageFactory.DataNormalizatorMessageFactory()</summary>
        </member>
        <member name="T:DataAdminCommonLib.Fakes.ShimDataNormalizatorMessageFactory.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:DataAdminCommonLib.Fakes.ShimDataNormalizatorMessageFactory.ShimLoginMessage">
            <summary>Shim type of DataAdminCommonLib.DataNormalizatorMessageFactory+LoginMessage</summary>
        </member>
        <member name="M:DataAdminCommonLib.Fakes.ShimDataNormalizatorMessageFactory.ShimLoginMessage.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:DataAdminCommonLib.Fakes.ShimDataNormalizatorMessageFactory.ShimLoginMessage.#ctor(DataAdminCommonLib.DataNormalizatorMessageFactory.LoginMessage)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:DataAdminCommonLib.Fakes.ShimDataNormalizatorMessageFactory.ShimLoginMessage.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:DataAdminCommonLib.Fakes.ShimDataNormalizatorMessageFactory.ShimLoginMessage.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:DataAdminCommonLib.Fakes.ShimDataNormalizatorMessageFactory.ShimLoginMessage.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:DataAdminCommonLib.Fakes.ShimDataNormalizatorMessageFactory.ShimLoginMessage.Constructor">
            <summary>Sets the shim of LoginMessage.LoginMessage()</summary>
        </member>
        <member name="P:DataAdminCommonLib.Fakes.ShimDataNormalizatorMessageFactory.ShimLoginMessage.ServerMessageGet">
            <summary>Sets the shim of LoginMessage.get_ServerMessage()</summary>
        </member>
        <member name="P:DataAdminCommonLib.Fakes.ShimDataNormalizatorMessageFactory.ShimLoginMessage.ServerMessageSetString">
            <summary>Sets the shim of LoginMessage.set_ServerMessage(String value)</summary>
        </member>
        <member name="P:DataAdminCommonLib.Fakes.ShimDataNormalizatorMessageFactory.ShimLoginMessage.UsernameGet">
            <summary>Sets the shim of LoginMessage.get_Username()</summary>
        </member>
        <member name="P:DataAdminCommonLib.Fakes.ShimDataNormalizatorMessageFactory.ShimLoginMessage.UsernameSetString">
            <summary>Sets the shim of LoginMessage.set_Username(String value)</summary>
        </member>
        <member name="T:DataAdminCommonLib.Fakes.ShimDataNormalizatorMessageFactory.ShimLoginMessage.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:DataAdminCommonLib.Fakes.ShimDataNormalizatorMessageFactory.ShimLoginMessage.AllInstances.ServerMessageGet">
            <summary>Sets the shim of LoginMessage.get_ServerMessage()</summary>
        </member>
        <member name="P:DataAdminCommonLib.Fakes.ShimDataNormalizatorMessageFactory.ShimLoginMessage.AllInstances.ServerMessageSetString">
            <summary>Sets the shim of LoginMessage.set_ServerMessage(String value)</summary>
        </member>
        <member name="P:DataAdminCommonLib.Fakes.ShimDataNormalizatorMessageFactory.ShimLoginMessage.AllInstances.UsernameGet">
            <summary>Sets the shim of LoginMessage.get_Username()</summary>
        </member>
        <member name="P:DataAdminCommonLib.Fakes.ShimDataNormalizatorMessageFactory.ShimLoginMessage.AllInstances.UsernameSetString">
            <summary>Sets the shim of LoginMessage.set_Username(String value)</summary>
        </member>
        <member name="T:DataAdminCommonLib.Fakes.ShimDataNormalizatorMessageFactory.ShimLogoutMessage">
            <summary>Shim type of DataAdminCommonLib.DataNormalizatorMessageFactory+LogoutMessage</summary>
        </member>
        <member name="M:DataAdminCommonLib.Fakes.ShimDataNormalizatorMessageFactory.ShimLogoutMessage.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:DataAdminCommonLib.Fakes.ShimDataNormalizatorMessageFactory.ShimLogoutMessage.#ctor(DataAdminCommonLib.DataNormalizatorMessageFactory.LogoutMessage)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:DataAdminCommonLib.Fakes.ShimDataNormalizatorMessageFactory.ShimLogoutMessage.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:DataAdminCommonLib.Fakes.ShimDataNormalizatorMessageFactory.ShimLogoutMessage.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:DataAdminCommonLib.Fakes.ShimDataNormalizatorMessageFactory.ShimLogoutMessage.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:DataAdminCommonLib.Fakes.ShimDataNormalizatorMessageFactory.ShimLogoutMessage.Constructor">
            <summary>Sets the shim of LogoutMessage.LogoutMessage()</summary>
        </member>
        <member name="P:DataAdminCommonLib.Fakes.ShimDataNormalizatorMessageFactory.ShimLogoutMessage.ServerMessageGet">
            <summary>Sets the shim of LogoutMessage.get_ServerMessage()</summary>
        </member>
        <member name="P:DataAdminCommonLib.Fakes.ShimDataNormalizatorMessageFactory.ShimLogoutMessage.ServerMessageSetString">
            <summary>Sets the shim of LogoutMessage.set_ServerMessage(String value)</summary>
        </member>
        <member name="P:DataAdminCommonLib.Fakes.ShimDataNormalizatorMessageFactory.ShimLogoutMessage.UsernameGet">
            <summary>Sets the shim of LogoutMessage.get_Username()</summary>
        </member>
        <member name="P:DataAdminCommonLib.Fakes.ShimDataNormalizatorMessageFactory.ShimLogoutMessage.UsernameSetString">
            <summary>Sets the shim of LogoutMessage.set_Username(String value)</summary>
        </member>
        <member name="T:DataAdminCommonLib.Fakes.ShimDataNormalizatorMessageFactory.ShimLogoutMessage.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:DataAdminCommonLib.Fakes.ShimDataNormalizatorMessageFactory.ShimLogoutMessage.AllInstances.ServerMessageGet">
            <summary>Sets the shim of LogoutMessage.get_ServerMessage()</summary>
        </member>
        <member name="P:DataAdminCommonLib.Fakes.ShimDataNormalizatorMessageFactory.ShimLogoutMessage.AllInstances.ServerMessageSetString">
            <summary>Sets the shim of LogoutMessage.set_ServerMessage(String value)</summary>
        </member>
        <member name="P:DataAdminCommonLib.Fakes.ShimDataNormalizatorMessageFactory.ShimLogoutMessage.AllInstances.UsernameGet">
            <summary>Sets the shim of LogoutMessage.get_Username()</summary>
        </member>
        <member name="P:DataAdminCommonLib.Fakes.ShimDataNormalizatorMessageFactory.ShimLogoutMessage.AllInstances.UsernameSetString">
            <summary>Sets the shim of LogoutMessage.set_Username(String value)</summary>
        </member>
        <member name="T:DataAdminCommonLib.Fakes.ShimDataNormalizatorMessageFactory.ShimTickNetCollectRequest">
            <summary>Shim type of DataAdminCommonLib.DataNormalizatorMessageFactory+TickNetCollectRequest</summary>
        </member>
        <member name="M:DataAdminCommonLib.Fakes.ShimDataNormalizatorMessageFactory.ShimTickNetCollectRequest.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:DataAdminCommonLib.Fakes.ShimDataNormalizatorMessageFactory.ShimTickNetCollectRequest.#ctor(DataAdminCommonLib.DataNormalizatorMessageFactory.TickNetCollectRequest)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:DataAdminCommonLib.Fakes.ShimDataNormalizatorMessageFactory.ShimTickNetCollectRequest.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:DataAdminCommonLib.Fakes.ShimDataNormalizatorMessageFactory.ShimTickNetCollectRequest.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:DataAdminCommonLib.Fakes.ShimDataNormalizatorMessageFactory.ShimTickNetCollectRequest.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:DataAdminCommonLib.Fakes.ShimDataNormalizatorMessageFactory.ShimTickNetCollectRequest.Constructor">
            <summary>Sets the shim of TickNetCollectRequest.TickNetCollectRequest()</summary>
        </member>
        <member name="P:DataAdminCommonLib.Fakes.ShimDataNormalizatorMessageFactory.ShimTickNetCollectRequest.ConstructorInt32DateTimeStringTickNetCollectRequestDataNormalizatorMessageFactoryStatus">
            <summary>Sets the shim of TickNetCollectRequest.TickNetCollectRequest(Int32 userId, DateTime time, String symbol, Status status)</summary>
        </member>
        <member name="P:DataAdminCommonLib.Fakes.ShimDataNormalizatorMessageFactory.ShimTickNetCollectRequest.DepthValueGet">
            <summary>Sets the shim of TickNetCollectRequest.get_DepthValue()</summary>
        </member>
        <member name="P:DataAdminCommonLib.Fakes.ShimDataNormalizatorMessageFactory.ShimTickNetCollectRequest.DepthValueSetInt32">
            <summary>Sets the shim of TickNetCollectRequest.set_DepthValue(Int32 value)</summary>
        </member>
        <member name="P:DataAdminCommonLib.Fakes.ShimDataNormalizatorMessageFactory.ShimTickNetCollectRequest.GroupIdGet">
            <summary>Sets the shim of TickNetCollectRequest.get_GroupId()</summary>
        </member>
        <member name="P:DataAdminCommonLib.Fakes.ShimDataNormalizatorMessageFactory.ShimTickNetCollectRequest.GroupIdSetInt32">
            <summary>Sets the shim of TickNetCollectRequest.set_GroupId(Int32 value)</summary>
        </member>
        <member name="P:DataAdminCommonLib.Fakes.ShimDataNormalizatorMessageFactory.ShimTickNetCollectRequest.IsGroupGet">
            <summary>Sets the shim of TickNetCollectRequest.get_IsGroup()</summary>
        </member>
        <member name="P:DataAdminCommonLib.Fakes.ShimDataNormalizatorMessageFactory.ShimTickNetCollectRequest.IsGroupSetBoolean">
            <summary>Sets the shim of TickNetCollectRequest.set_IsGroup(Boolean value)</summary>
        </member>
        <member name="P:DataAdminCommonLib.Fakes.ShimDataNormalizatorMessageFactory.ShimTickNetCollectRequest.OperationStatusGet">
            <summary>Sets the shim of TickNetCollectRequest.get_OperationStatus()</summary>
        </member>
        <member name="P:DataAdminCommonLib.Fakes.ShimDataNormalizatorMessageFactory.ShimTickNetCollectRequest.OperationStatusSetTickNetCollectRequestDataNormalizatorMessageFactoryStatus">
            <summary>Sets the shim of TickNetCollectRequest.set_OperationStatus(Status value)</summary>
        </member>
        <member name="P:DataAdminCommonLib.Fakes.ShimDataNormalizatorMessageFactory.ShimTickNetCollectRequest.SymbolGet">
            <summary>Sets the shim of TickNetCollectRequest.get_Symbol()</summary>
        </member>
        <member name="P:DataAdminCommonLib.Fakes.ShimDataNormalizatorMessageFactory.ShimTickNetCollectRequest.SymbolSetString">
            <summary>Sets the shim of TickNetCollectRequest.set_Symbol(String value)</summary>
        </member>
        <member name="P:DataAdminCommonLib.Fakes.ShimDataNormalizatorMessageFactory.ShimTickNetCollectRequest.TimeGet">
            <summary>Sets the shim of TickNetCollectRequest.get_Time()</summary>
        </member>
        <member name="P:DataAdminCommonLib.Fakes.ShimDataNormalizatorMessageFactory.ShimTickNetCollectRequest.TimeSetDateTime">
            <summary>Sets the shim of TickNetCollectRequest.set_Time(DateTime value)</summary>
        </member>
        <member name="P:DataAdminCommonLib.Fakes.ShimDataNormalizatorMessageFactory.ShimTickNetCollectRequest.UserIDGet">
            <summary>Sets the shim of TickNetCollectRequest.get_UserID()</summary>
        </member>
        <member name="P:DataAdminCommonLib.Fakes.ShimDataNormalizatorMessageFactory.ShimTickNetCollectRequest.UserIDSetInt32">
            <summary>Sets the shim of TickNetCollectRequest.set_UserID(Int32 value)</summary>
        </member>
        <member name="P:DataAdminCommonLib.Fakes.ShimDataNormalizatorMessageFactory.ShimTickNetCollectRequest.UserNameGet">
            <summary>Sets the shim of TickNetCollectRequest.get_UserName()</summary>
        </member>
        <member name="P:DataAdminCommonLib.Fakes.ShimDataNormalizatorMessageFactory.ShimTickNetCollectRequest.UserNameSetString">
            <summary>Sets the shim of TickNetCollectRequest.set_UserName(String value)</summary>
        </member>
        <member name="T:DataAdminCommonLib.Fakes.ShimDataNormalizatorMessageFactory.ShimTickNetCollectRequest.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:DataAdminCommonLib.Fakes.ShimDataNormalizatorMessageFactory.ShimTickNetCollectRequest.AllInstances.DepthValueGet">
            <summary>Sets the shim of TickNetCollectRequest.get_DepthValue()</summary>
        </member>
        <member name="P:DataAdminCommonLib.Fakes.ShimDataNormalizatorMessageFactory.ShimTickNetCollectRequest.AllInstances.DepthValueSetInt32">
            <summary>Sets the shim of TickNetCollectRequest.set_DepthValue(Int32 value)</summary>
        </member>
        <member name="P:DataAdminCommonLib.Fakes.ShimDataNormalizatorMessageFactory.ShimTickNetCollectRequest.AllInstances.GroupIdGet">
            <summary>Sets the shim of TickNetCollectRequest.get_GroupId()</summary>
        </member>
        <member name="P:DataAdminCommonLib.Fakes.ShimDataNormalizatorMessageFactory.ShimTickNetCollectRequest.AllInstances.GroupIdSetInt32">
            <summary>Sets the shim of TickNetCollectRequest.set_GroupId(Int32 value)</summary>
        </member>
        <member name="P:DataAdminCommonLib.Fakes.ShimDataNormalizatorMessageFactory.ShimTickNetCollectRequest.AllInstances.IsGroupGet">
            <summary>Sets the shim of TickNetCollectRequest.get_IsGroup()</summary>
        </member>
        <member name="P:DataAdminCommonLib.Fakes.ShimDataNormalizatorMessageFactory.ShimTickNetCollectRequest.AllInstances.IsGroupSetBoolean">
            <summary>Sets the shim of TickNetCollectRequest.set_IsGroup(Boolean value)</summary>
        </member>
        <member name="P:DataAdminCommonLib.Fakes.ShimDataNormalizatorMessageFactory.ShimTickNetCollectRequest.AllInstances.OperationStatusGet">
            <summary>Sets the shim of TickNetCollectRequest.get_OperationStatus()</summary>
        </member>
        <member name="P:DataAdminCommonLib.Fakes.ShimDataNormalizatorMessageFactory.ShimTickNetCollectRequest.AllInstances.OperationStatusSetTickNetCollectRequestDataNormalizatorMessageFactoryStatus">
            <summary>Sets the shim of TickNetCollectRequest.set_OperationStatus(Status value)</summary>
        </member>
        <member name="P:DataAdminCommonLib.Fakes.ShimDataNormalizatorMessageFactory.ShimTickNetCollectRequest.AllInstances.SymbolGet">
            <summary>Sets the shim of TickNetCollectRequest.get_Symbol()</summary>
        </member>
        <member name="P:DataAdminCommonLib.Fakes.ShimDataNormalizatorMessageFactory.ShimTickNetCollectRequest.AllInstances.SymbolSetString">
            <summary>Sets the shim of TickNetCollectRequest.set_Symbol(String value)</summary>
        </member>
        <member name="P:DataAdminCommonLib.Fakes.ShimDataNormalizatorMessageFactory.ShimTickNetCollectRequest.AllInstances.TimeGet">
            <summary>Sets the shim of TickNetCollectRequest.get_Time()</summary>
        </member>
        <member name="P:DataAdminCommonLib.Fakes.ShimDataNormalizatorMessageFactory.ShimTickNetCollectRequest.AllInstances.TimeSetDateTime">
            <summary>Sets the shim of TickNetCollectRequest.set_Time(DateTime value)</summary>
        </member>
        <member name="P:DataAdminCommonLib.Fakes.ShimDataNormalizatorMessageFactory.ShimTickNetCollectRequest.AllInstances.UserIDGet">
            <summary>Sets the shim of TickNetCollectRequest.get_UserID()</summary>
        </member>
        <member name="P:DataAdminCommonLib.Fakes.ShimDataNormalizatorMessageFactory.ShimTickNetCollectRequest.AllInstances.UserIDSetInt32">
            <summary>Sets the shim of TickNetCollectRequest.set_UserID(Int32 value)</summary>
        </member>
        <member name="P:DataAdminCommonLib.Fakes.ShimDataNormalizatorMessageFactory.ShimTickNetCollectRequest.AllInstances.UserNameGet">
            <summary>Sets the shim of TickNetCollectRequest.get_UserName()</summary>
        </member>
        <member name="P:DataAdminCommonLib.Fakes.ShimDataNormalizatorMessageFactory.ShimTickNetCollectRequest.AllInstances.UserNameSetString">
            <summary>Sets the shim of TickNetCollectRequest.set_UserName(String value)</summary>
        </member>
        <member name="T:DataAdminCommonLib.Fakes.StubDataAdminMessageFactory">
            <summary>Stub type of DataAdminCommonLib.DataAdminMessageFactory</summary>
        </member>
        <member name="M:DataAdminCommonLib.Fakes.StubDataAdminMessageFactory.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:DataAdminCommonLib.Fakes.StubDataAdminMessageFactory.InitializeStub">
            <summary>Initializes a new instance of type StubDataAdminMessageFactory</summary>
        </member>
        <member name="P:DataAdminCommonLib.Fakes.StubDataAdminMessageFactory.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:DataAdminCommonLib.Fakes.StubDataAdminMessageFactory.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:DataAdminCommonLib.Fakes.StubDataAdminMessageFactory.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:DataAdminCommonLib.Fakes.StubDataNormalizatorMessageFactory">
            <summary>Stub type of DataAdminCommonLib.DataNormalizatorMessageFactory</summary>
        </member>
        <member name="M:DataAdminCommonLib.Fakes.StubDataNormalizatorMessageFactory.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:DataAdminCommonLib.Fakes.StubDataNormalizatorMessageFactory.InitializeStub">
            <summary>Initializes a new instance of type StubDataNormalizatorMessageFactory</summary>
        </member>
        <member name="P:DataAdminCommonLib.Fakes.StubDataNormalizatorMessageFactory.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:DataAdminCommonLib.Fakes.StubDataNormalizatorMessageFactory.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:DataAdminCommonLib.Fakes.StubDataNormalizatorMessageFactory.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:DataAdminCommonLib.Fakes.StubIDataAdminService">
            <summary>Stub type of DataAdminCommonLib.IDataAdminService</summary>
        </member>
        <member name="M:DataAdminCommonLib.Fakes.StubIDataAdminService.#ctor">
            <summary>Initializes a new instance of type StubIDataAdminService</summary>
        </member>
        <member name="F:DataAdminCommonLib.Fakes.StubIDataAdminService.BlockClientString">
            <summary>Sets the stub of IDataAdminService.BlockClient(String username)</summary>
        </member>
        <member name="F:DataAdminCommonLib.Fakes.StubIDataAdminService.ChangePrivilegeStringDataAdminMessageFactoryChangePrivilage">
            <summary>Sets the stub of IDataAdminService.ChangePrivilege(String username, ChangePrivilage newprivilege)</summary>
        </member>
        <member name="M:DataAdminCommonLib.Fakes.StubIDataAdminService.dacl::DataAdminCommonLib#IDataAdminService#BlockClient(System.String)">
            <summary>Sets the stub of IDataAdminService.BlockClient(String username)</summary>
        </member>
        <member name="M:DataAdminCommonLib.Fakes.StubIDataAdminService.dacl::DataAdminCommonLib#IDataAdminService#ChangePrivilege(System.String,DataAdminCommonLib.DataAdminMessageFactory.ChangePrivilage)">
            <summary>Sets the stub of IDataAdminService.ChangePrivilege(String username, ChangePrivilage newprivilege)</summary>
        </member>
        <member name="M:DataAdminCommonLib.Fakes.StubIDataAdminService.dacl::DataAdminCommonLib#IDataAdminService#DeletedByAdmin">
            <summary>Sets the stub of IDataAdminService.DeletedByAdmin()</summary>
        </member>
        <member name="M:DataAdminCommonLib.Fakes.StubIDataAdminService.dacl::DataAdminCommonLib#IDataAdminService#Login(DataAdminCommonLib.DataAdminMessageFactory.LoginMessage)">
            <summary>Sets the stub of IDataAdminService.Login(LoginMessage loginParams)</summary>
        </member>
        <member name="M:DataAdminCommonLib.Fakes.StubIDataAdminService.dacl::DataAdminCommonLib#IDataAdminService#Logout(System.String,System.String)">
            <summary>Sets the stub of IDataAdminService.Logout(String msg, String username)</summary>
        </member>
        <member name="M:DataAdminCommonLib.Fakes.StubIDataAdminService.dacl::DataAdminCommonLib#IDataAdminService#Ping">
            <summary>Sets the stub of IDataAdminService.Ping()</summary>
        </member>
        <member name="M:DataAdminCommonLib.Fakes.StubIDataAdminService.dacl::DataAdminCommonLib#IDataAdminService#ResponseFromTNStopping">
            <summary>Sets the stub of IDataAdminService.ResponseFromTNStopping()</summary>
        </member>
        <member name="M:DataAdminCommonLib.Fakes.StubIDataAdminService.dacl::DataAdminCommonLib#IDataAdminService#SendActivateMsgToClient(System.String)">
            <summary>Sets the stub of IDataAdminService.SendActivateMsgToClient(String msg)</summary>
        </member>
        <member name="M:DataAdminCommonLib.Fakes.StubIDataAdminService.dacl::DataAdminCommonLib#IDataAdminService#SendAllowedSymbolGroups(System.Object)">
            <summary>Sets the stub of IDataAdminService.SendAllowedSymbolGroups(Object symbGroupList)</summary>
        </member>
        <member name="M:DataAdminCommonLib.Fakes.StubIDataAdminService.dacl::DataAdminCommonLib#IDataAdminService#SendAllowedSymbolList(System.Object)">
            <summary>Sets the stub of IDataAdminService.SendAllowedSymbolList(Object symbolList)</summary>
        </member>
        <member name="M:DataAdminCommonLib.Fakes.StubIDataAdminService.dacl::DataAdminCommonLib#IDataAdminService#SendConnectionString(System.String)">
            <summary>Sets the stub of IDataAdminService.SendConnectionString(String connectionString)</summary>
        </member>
        <member name="M:DataAdminCommonLib.Fakes.StubIDataAdminService.dacl::DataAdminCommonLib#IDataAdminService#SendDexportLogin(System.String)">
            <summary>Sets the stub of IDataAdminService.SendDexportLogin(String msg)</summary>
        </member>
        <member name="M:DataAdminCommonLib.Fakes.StubIDataAdminService.dacl::DataAdminCommonLib#IDataAdminService#SendDexportLogout(System.String)">
            <summary>Sets the stub of IDataAdminService.SendDexportLogout(String msg)</summary>
        </member>
        <member name="M:DataAdminCommonLib.Fakes.StubIDataAdminService.dacl::DataAdminCommonLib#IDataAdminService#SendDexportPermission(DataAdminCommonLib.DataAdminMessageFactory.ChangePrivilage)">
            <summary>Sets the stub of IDataAdminService.SendDexportPermission(ChangePrivilage msg)</summary>
        </member>
        <member name="M:DataAdminCommonLib.Fakes.StubIDataAdminService.dacl::DataAdminCommonLib#IDataAdminService#SendGroupCollectRequest(DataAdminCommonLib.DataAdminMessageFactory.TickNetCollectMsg)">
            <summary>Sets the stub of IDataAdminService.SendGroupCollectRequest(TickNetCollectMsg msg)</summary>
        </member>
        <member name="M:DataAdminCommonLib.Fakes.StubIDataAdminService.dacl::DataAdminCommonLib#IDataAdminService#SendMessagageToClient(System.String)">
            <summary>Sets the stub of IDataAdminService.SendMessagageToClient(String message)</summary>
        </member>
        <member name="M:DataAdminCommonLib.Fakes.StubIDataAdminService.dacl::DataAdminCommonLib#IDataAdminService#SendMessageToServer(System.String)">
            <summary>Sets the stub of IDataAdminService.SendMessageToServer(String message)</summary>
        </member>
        <member name="M:DataAdminCommonLib.Fakes.StubIDataAdminService.dacl::DataAdminCommonLib#IDataAdminService#SendMessageToTicknetClient(System.String)">
            <summary>Sets the stub of IDataAdminService.SendMessageToTicknetClient(String msg)</summary>
        </member>
        <member name="M:DataAdminCommonLib.Fakes.StubIDataAdminService.dacl::DataAdminCommonLib#IDataAdminService#SendSymbolCollectRequest(DataAdminCommonLib.DataAdminMessageFactory.TickNetCollectMsg)">
            <summary>Sets the stub of IDataAdminService.SendSymbolCollectRequest(TickNetCollectMsg msg)</summary>
        </member>
        <member name="M:DataAdminCommonLib.Fakes.StubIDataAdminService.dacl::DataAdminCommonLib#IDataAdminService#SendWaitToClients(System.String)">
            <summary>Sets the stub of IDataAdminService.SendWaitToClients(String message)</summary>
        </member>
        <member name="M:DataAdminCommonLib.Fakes.StubIDataAdminService.dacl::DataAdminCommonLib#IDataAdminService#SymbolPermissionChangedByAdmin(System.String)">
            <summary>Sets the stub of IDataAdminService.SymbolPermissionChangedByAdmin(String msg)</summary>
        </member>
        <member name="M:DataAdminCommonLib.Fakes.StubIDataAdminService.dacl::DataAdminCommonLib#IDataAdminService#onLogon(System.Boolean,DataAdminCommonLib.DataAdminMessageFactory.ChangePrivilage)">
            <summary>Sets the stub of IDataAdminService.onLogon(Boolean logged, ChangePrivilage getprivilages)</summary>
        </member>
        <member name="M:DataAdminCommonLib.Fakes.StubIDataAdminService.dacl::DataAdminCommonLib#IDataAdminService#onSymbolGroupListRecieved(System.String)">
            <summary>Sets the stub of IDataAdminService.onSymbolGroupListRecieved(String symbolGroupList)</summary>
        </member>
        <member name="M:DataAdminCommonLib.Fakes.StubIDataAdminService.dacl::DataAdminCommonLib#IDataAdminService#onSymbolListRecieved(System.String)">
            <summary>Sets the stub of IDataAdminService.onSymbolListRecieved(String symbolList)</summary>
        </member>
        <member name="F:DataAdminCommonLib.Fakes.StubIDataAdminService.DeletedByAdmin">
            <summary>Sets the stub of IDataAdminService.DeletedByAdmin()</summary>
        </member>
        <member name="F:DataAdminCommonLib.Fakes.StubIDataAdminService.LoginDataAdminMessageFactoryLoginMessage">
            <summary>Sets the stub of IDataAdminService.Login(LoginMessage loginParams)</summary>
        </member>
        <member name="F:DataAdminCommonLib.Fakes.StubIDataAdminService.LogoutStringString">
            <summary>Sets the stub of IDataAdminService.Logout(String msg, String username)</summary>
        </member>
        <member name="F:DataAdminCommonLib.Fakes.StubIDataAdminService.OnLogonBooleanDataAdminMessageFactoryChangePrivilage">
            <summary>Sets the stub of IDataAdminService.onLogon(Boolean logged, ChangePrivilage getprivilages)</summary>
        </member>
        <member name="F:DataAdminCommonLib.Fakes.StubIDataAdminService.OnSymbolGroupListRecievedString">
            <summary>Sets the stub of IDataAdminService.onSymbolGroupListRecieved(String symbolGroupList)</summary>
        </member>
        <member name="F:DataAdminCommonLib.Fakes.StubIDataAdminService.OnSymbolListRecievedString">
            <summary>Sets the stub of IDataAdminService.onSymbolListRecieved(String symbolList)</summary>
        </member>
        <member name="F:DataAdminCommonLib.Fakes.StubIDataAdminService.Ping">
            <summary>Sets the stub of IDataAdminService.Ping()</summary>
        </member>
        <member name="F:DataAdminCommonLib.Fakes.StubIDataAdminService.ResponseFromTNStopping">
            <summary>Sets the stub of IDataAdminService.ResponseFromTNStopping()</summary>
        </member>
        <member name="F:DataAdminCommonLib.Fakes.StubIDataAdminService.SendActivateMsgToClientString">
            <summary>Sets the stub of IDataAdminService.SendActivateMsgToClient(String msg)</summary>
        </member>
        <member name="F:DataAdminCommonLib.Fakes.StubIDataAdminService.SendAllowedSymbolGroupsObject">
            <summary>Sets the stub of IDataAdminService.SendAllowedSymbolGroups(Object symbGroupList)</summary>
        </member>
        <member name="F:DataAdminCommonLib.Fakes.StubIDataAdminService.SendAllowedSymbolListObject">
            <summary>Sets the stub of IDataAdminService.SendAllowedSymbolList(Object symbolList)</summary>
        </member>
        <member name="F:DataAdminCommonLib.Fakes.StubIDataAdminService.SendConnectionStringString">
            <summary>Sets the stub of IDataAdminService.SendConnectionString(String connectionString)</summary>
        </member>
        <member name="F:DataAdminCommonLib.Fakes.StubIDataAdminService.SendDexportLoginString">
            <summary>Sets the stub of IDataAdminService.SendDexportLogin(String msg)</summary>
        </member>
        <member name="F:DataAdminCommonLib.Fakes.StubIDataAdminService.SendDexportLogoutString">
            <summary>Sets the stub of IDataAdminService.SendDexportLogout(String msg)</summary>
        </member>
        <member name="F:DataAdminCommonLib.Fakes.StubIDataAdminService.SendDexportPermissionDataAdminMessageFactoryChangePrivilage">
            <summary>Sets the stub of IDataAdminService.SendDexportPermission(ChangePrivilage msg)</summary>
        </member>
        <member name="F:DataAdminCommonLib.Fakes.StubIDataAdminService.SendGroupCollectRequestDataAdminMessageFactoryTickNetCollectMsg">
            <summary>Sets the stub of IDataAdminService.SendGroupCollectRequest(TickNetCollectMsg msg)</summary>
        </member>
        <member name="F:DataAdminCommonLib.Fakes.StubIDataAdminService.SendMessagageToClientString">
            <summary>Sets the stub of IDataAdminService.SendMessagageToClient(String message)</summary>
        </member>
        <member name="F:DataAdminCommonLib.Fakes.StubIDataAdminService.SendMessageToServerString">
            <summary>Sets the stub of IDataAdminService.SendMessageToServer(String message)</summary>
        </member>
        <member name="F:DataAdminCommonLib.Fakes.StubIDataAdminService.SendMessageToTicknetClientString">
            <summary>Sets the stub of IDataAdminService.SendMessageToTicknetClient(String msg)</summary>
        </member>
        <member name="F:DataAdminCommonLib.Fakes.StubIDataAdminService.SendSymbolCollectRequestDataAdminMessageFactoryTickNetCollectMsg">
            <summary>Sets the stub of IDataAdminService.SendSymbolCollectRequest(TickNetCollectMsg msg)</summary>
        </member>
        <member name="F:DataAdminCommonLib.Fakes.StubIDataAdminService.SendWaitToClientsString">
            <summary>Sets the stub of IDataAdminService.SendWaitToClients(String message)</summary>
        </member>
        <member name="F:DataAdminCommonLib.Fakes.StubIDataAdminService.SymbolPermissionChangedByAdminString">
            <summary>Sets the stub of IDataAdminService.SymbolPermissionChangedByAdmin(String msg)</summary>
        </member>
        <member name="T:DataAdminCommonLib.Fakes.StubIDataNetLogService">
            <summary>Stub type of DataAdminCommonLib.IDataNetLogService</summary>
        </member>
        <member name="M:DataAdminCommonLib.Fakes.StubIDataNetLogService.#ctor">
            <summary>Initializes a new instance of type StubIDataNetLogService</summary>
        </member>
        <member name="M:DataAdminCommonLib.Fakes.StubIDataNetLogService.dacl::DataAdminCommonLib#IDataNetLogService#SendDexportLog(DataAdminCommonLib.DataAdminMessageFactory.LogMessage)">
            <summary>Sets the stub of IDataNetLogService.SendDexportLog(LogMessage msg)</summary>
        </member>
        <member name="M:DataAdminCommonLib.Fakes.StubIDataNetLogService.dacl::DataAdminCommonLib#IDataNetLogService#SendDexportSimpleLog(System.String)">
            <summary>Sets the stub of IDataNetLogService.SendDexportSimpleLog(String msg)</summary>
        </member>
        <member name="M:DataAdminCommonLib.Fakes.StubIDataNetLogService.dacl::DataAdminCommonLib#IDataNetLogService#SendFinishedOperationLog(DataAdminCommonLib.DataAdminMessageFactory.LogMessage)">
            <summary>Sets the stub of IDataNetLogService.SendFinishedOperationLog(LogMessage msg)</summary>
        </member>
        <member name="M:DataAdminCommonLib.Fakes.StubIDataNetLogService.dacl::DataAdminCommonLib#IDataNetLogService#SendSimpleLog(DataAdminCommonLib.DataAdminMessageFactory.LogMessage)">
            <summary>Sets the stub of IDataNetLogService.SendSimpleLog(LogMessage msg)</summary>
        </member>
        <member name="M:DataAdminCommonLib.Fakes.StubIDataNetLogService.dacl::DataAdminCommonLib#IDataNetLogService#SendStartedOperationLog(DataAdminCommonLib.DataAdminMessageFactory.LogMessage)">
            <summary>Sets the stub of IDataNetLogService.SendStartedOperationLog(LogMessage msg)</summary>
        </member>
        <member name="F:DataAdminCommonLib.Fakes.StubIDataNetLogService.SendDexportLogDataAdminMessageFactoryLogMessage">
            <summary>Sets the stub of IDataNetLogService.SendDexportLog(LogMessage msg)</summary>
        </member>
        <member name="F:DataAdminCommonLib.Fakes.StubIDataNetLogService.SendDexportSimpleLogString">
            <summary>Sets the stub of IDataNetLogService.SendDexportSimpleLog(String msg)</summary>
        </member>
        <member name="F:DataAdminCommonLib.Fakes.StubIDataNetLogService.SendFinishedOperationLogDataAdminMessageFactoryLogMessage">
            <summary>Sets the stub of IDataNetLogService.SendFinishedOperationLog(LogMessage msg)</summary>
        </member>
        <member name="F:DataAdminCommonLib.Fakes.StubIDataNetLogService.SendSimpleLogDataAdminMessageFactoryLogMessage">
            <summary>Sets the stub of IDataNetLogService.SendSimpleLog(LogMessage msg)</summary>
        </member>
        <member name="F:DataAdminCommonLib.Fakes.StubIDataNetLogService.SendStartedOperationLogDataAdminMessageFactoryLogMessage">
            <summary>Sets the stub of IDataNetLogService.SendStartedOperationLog(LogMessage msg)</summary>
        </member>
        <member name="T:DataAdminCommonLib.Fakes.StubIDataNormalizatorService">
            <summary>Stub type of DataAdminCommonLib.IDataNormalizatorService</summary>
        </member>
        <member name="M:DataAdminCommonLib.Fakes.StubIDataNormalizatorService.#ctor">
            <summary>Initializes a new instance of type StubIDataNormalizatorService</summary>
        </member>
        <member name="F:DataAdminCommonLib.Fakes.StubIDataNormalizatorService.ActivateClientString">
            <summary>Sets the stub of IDataNormalizatorService.ActivateClient(String symbol)</summary>
        </member>
        <member name="F:DataAdminCommonLib.Fakes.StubIDataNormalizatorService.AllCollectFinished">
            <summary>Sets the stub of IDataNormalizatorService.AllCollectFinished()</summary>
        </member>
        <member name="F:DataAdminCommonLib.Fakes.StubIDataNormalizatorService.ClientActivatedString">
            <summary>Sets the stub of IDataNormalizatorService.ClientActivated(String userName)</summary>
        </member>
        <member name="F:DataAdminCommonLib.Fakes.StubIDataNormalizatorService.ClientDeactivatedString">
            <summary>Sets the stub of IDataNormalizatorService.ClientDeactivated(String symbol)</summary>
        </member>
        <member name="F:DataAdminCommonLib.Fakes.StubIDataNormalizatorService.CollectFinishedString">
            <summary>Sets the stub of IDataNormalizatorService.CollectFinished(String msg)</summary>
        </member>
        <member name="M:DataAdminCommonLib.Fakes.StubIDataNormalizatorService.dacl::DataAdminCommonLib#IDataNormalizatorService#ActivateClient(System.String)">
            <summary>Sets the stub of IDataNormalizatorService.ActivateClient(String symbol)</summary>
        </member>
        <member name="M:DataAdminCommonLib.Fakes.StubIDataNormalizatorService.dacl::DataAdminCommonLib#IDataNormalizatorService#AllCollectFinished">
            <summary>Sets the stub of IDataNormalizatorService.AllCollectFinished()</summary>
        </member>
        <member name="M:DataAdminCommonLib.Fakes.StubIDataNormalizatorService.dacl::DataAdminCommonLib#IDataNormalizatorService#ClientActivated(System.String)">
            <summary>Sets the stub of IDataNormalizatorService.ClientActivated(String userName)</summary>
        </member>
        <member name="M:DataAdminCommonLib.Fakes.StubIDataNormalizatorService.dacl::DataAdminCommonLib#IDataNormalizatorService#ClientDeactivated(System.String)">
            <summary>Sets the stub of IDataNormalizatorService.ClientDeactivated(String symbol)</summary>
        </member>
        <member name="M:DataAdminCommonLib.Fakes.StubIDataNormalizatorService.dacl::DataAdminCommonLib#IDataNormalizatorService#CollectFinished(System.String)">
            <summary>Sets the stub of IDataNormalizatorService.CollectFinished(String msg)</summary>
        </member>
        <member name="M:DataAdminCommonLib.Fakes.StubIDataNormalizatorService.dacl::DataAdminCommonLib#IDataNormalizatorService#DeactivateClient(System.String,System.String)">
            <summary>Sets the stub of IDataNormalizatorService.DeactivateClient(String usrName, String symbolList)</summary>
        </member>
        <member name="M:DataAdminCommonLib.Fakes.StubIDataNormalizatorService.dacl::DataAdminCommonLib#IDataNormalizatorService#Login(DataAdminCommonLib.DataNormalizatorMessageFactory.LoginMessage)">
            <summary>Sets the stub of IDataNormalizatorService.Login(LoginMessage msg)</summary>
        </member>
        <member name="M:DataAdminCommonLib.Fakes.StubIDataNormalizatorService.dacl::DataAdminCommonLib#IDataNormalizatorService#Logout">
            <summary>Sets the stub of IDataNormalizatorService.Logout()</summary>
        </member>
        <member name="M:DataAdminCommonLib.Fakes.StubIDataNormalizatorService.dacl::DataAdminCommonLib#IDataNormalizatorService#RefreshSymbols">
            <summary>Sets the stub of IDataNormalizatorService.RefreshSymbols()</summary>
        </member>
        <member name="M:DataAdminCommonLib.Fakes.StubIDataNormalizatorService.dacl::DataAdminCommonLib#IDataNormalizatorService#TickNetCollectRequest(DataAdminCommonLib.DataNormalizatorMessageFactory.TickNetCollectRequest)">
            <summary>Sets the stub of IDataNormalizatorService.TickNetCollectRequest(TickNetCollectRequest request)</summary>
        </member>
        <member name="F:DataAdminCommonLib.Fakes.StubIDataNormalizatorService.DeactivateClientStringString">
            <summary>Sets the stub of IDataNormalizatorService.DeactivateClient(String usrName, String symbolList)</summary>
        </member>
        <member name="F:DataAdminCommonLib.Fakes.StubIDataNormalizatorService.LoginDataNormalizatorMessageFactoryLoginMessage">
            <summary>Sets the stub of IDataNormalizatorService.Login(LoginMessage msg)</summary>
        </member>
        <member name="F:DataAdminCommonLib.Fakes.StubIDataNormalizatorService.Logout">
            <summary>Sets the stub of IDataNormalizatorService.Logout()</summary>
        </member>
        <member name="F:DataAdminCommonLib.Fakes.StubIDataNormalizatorService.RefreshSymbols">
            <summary>Sets the stub of IDataNormalizatorService.RefreshSymbols()</summary>
        </member>
        <member name="F:DataAdminCommonLib.Fakes.StubIDataNormalizatorService.TickNetCollectRequestDataNormalizatorMessageFactoryTickNetCollectRequest">
            <summary>Sets the stub of IDataNormalizatorService.TickNetCollectRequest(TickNetCollectRequest request)</summary>
        </member>
    </members>
</doc>
